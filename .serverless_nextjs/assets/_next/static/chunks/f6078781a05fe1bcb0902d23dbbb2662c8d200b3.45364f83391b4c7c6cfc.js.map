{"version":3,"sources":["webpack://_N_E/../../../../../next-server/lib/router/utils/is-dynamic.ts","webpack://_N_E/../../client/with-router.tsx","webpack://_N_E/../../../../../next-server/lib/router/utils/querystring.ts","webpack://_N_E/../../../../../next-server/lib/router/utils/format-url.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://_N_E/../../client/normalize-trailing-slash.ts","webpack://_N_E/../../../../../next-server/lib/router/utils/route-regex.ts","webpack://_N_E/../../../next-server/lib/mitt.ts","webpack://_N_E/../../../../next-server/lib/router/router.ts","webpack://_N_E/../../../../../next-server/lib/router/utils/escape-path-delimiters.ts","webpack://_N_E/../../../next-server/lib/utils.ts","webpack://_N_E/../../../../../next-server/lib/router/utils/route-matcher.ts","webpack://_N_E/../../../../../next-server/lib/router/utils/parse-relative-url.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://_N_E/../../client/router.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/construct.js","webpack://_N_E/../../../next-server/lib/router-context.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/regenerator/index.js","webpack://_N_E/./node_modules/next/dist/next-server/server/denormalize-page-path.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/slicedToArray.js"],"names":["route","TEST_ROUTE","router","WithRouterWrapper","ComposedComponent","getInitialProps","stringifyUrlQueryParam","param","isNaN","String","query","searchParams","Array","result","Object","value","item","searchParamsList","key","target","urlObj","protocol","pathname","hash","host","auth","encodeURIComponent","hostname","querystring","search","slashedProtocols","_typeof","_getRequireWildcardCache","WeakMap","cache","module","exports","obj","__esModule","has","get","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","prototype","hasOwnProperty","call","desc","set","arr","isArray","removePathTrailingSlash","path","normalizePathTrailingSlash","segments","normalizedRoute","groups","groupIndex","parameterizedRoute","segment","optional","repeat","parseParameter","pos","str","re","RegExp","all","on","off","emit","handler","buildCancellationError","Error","cancelled","addLocale","delLocale","hasBasePath","addBasePath","prefix","addPathPrefix","delBasePath","isLocalURL","url","locationOrigin","resolved","URL","_","interpolateAs","interpolatedRoute","dynamicRegex","getRouteRegex","dynamicGroups","dynamicMatches","asPathname","getRouteMatcher","params","replaced","escapePathDelimiters","omitParmsFromQuery","filteredQuery","resolveHref","base","currentPath","urlAsString","href","formatWithValidation","finalUrl","interpolatedAs","isDynamicRoute","searchParamsToUrlQuery","resolvedHref","resolveAs","PAGE_LOAD_ERROR","Symbol","markLoadingError","err","prepareUrlAs","as","fetchNextData","dataHref","fetchRetry","fetch","credentials","res","attempts","isServerRender","Router","constructor","asPath","basePath","components","sdc","sub","clc","pageLoader","_bps","events","_wrapApp","isSsr","isFallback","_inFlightRoute","_shallow","locale","locales","defaultLocale","e","state","parseRelativeUrl","shallow","options","this","Component","styleSheets","props","__N_SSG","initialProps","__N_SSP","__NEXT_DATA__","window","change","ST","performance","cleanedAs","onlyAHashChange","pages","__rewrites","parsed","_resolveHref","urlIsNew","method","resolvedAs","parsedAs","routeRegex","routeMatch","shouldInterpolate","missingParams","getRouteInfo","routeInfo","destination","parsedHref","Promise","error","getURL","__N","ssg404","fetchComponent","page","mod","_getStaticData","getDataHref","undefined","console","handleRouteInfoError","cachedRouteInfo","then","_getData","notify","split","newHash","oldUrlNoHash","oldHash","idEl","document","nameEl","applyBasePath","cleanPathname","denormalizePagePath","prefetchData","cancel","loadPage","componentResult","fn","data","AppTree","ctx","loadGetInitialProps","char","used","origin","getLocationOrigin","formatUrl","port","getDisplayName","isResSent","App","pageProps","message","SP","decode","decodeURIComponent","slugName","g","m","entry","resolvedBase","DUMMY_BASE","Reflect","construct","sham","Proxy","Date","toString","i","iterator","_arr","_n","_d","_e","_s","_i","next","done","push","length","React","RouterContext","_router","instance","coreMethodFields","field","singletonRouter","readyCallbacks","ready","cb","urlPropertyFields","getRouter","routerEvents","event","eventField","_singletonRouter","TypeError","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","a","apply","Function","bind","arguments","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","self","normalizePathSep","replace","startsWith","slice","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest"],"mappings":"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","file":"static/chunks/f6078781a05fe1bcb0902d23dbbb2662c8d200b3.45364f83391b4c7c6cfc.js","sourcesContent":["// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/\n\nexport function isDynamicRoute(route: string): boolean {\n  return TEST_ROUTE.test(route)\n}\n","import React from 'react'\nimport { NextComponentType, NextPageContext } from '../next-server/lib/utils'\nimport { NextRouter, useRouter } from './router'\n\nexport type WithRouterProps = {\n  router: NextRouter\n}\n\nexport type ExcludeRouterProps<P> = Pick<\n  P,\n  Exclude<keyof P, keyof WithRouterProps>\n>\n\nexport default function withRouter<\n  P extends WithRouterProps,\n  C = NextPageContext\n>(\n  ComposedComponent: NextComponentType<C, any, P>\n): React.ComponentType<ExcludeRouterProps<P>> {\n  function WithRouterWrapper(props: any) {\n    return <ComposedComponent router={useRouter()} {...props} />\n  }\n\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps\n  // This is needed to allow checking for custom getInitialProps in _app\n  ;(WithRouterWrapper as any).origGetInitialProps = (ComposedComponent as any).origGetInitialProps\n  if (process.env.NODE_ENV !== 'production') {\n    const name =\n      ComposedComponent.displayName || ComposedComponent.name || 'Unknown'\n    WithRouterWrapper.displayName = `withRouter(${name})`\n  }\n\n  return WithRouterWrapper\n}\n","import { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  searchParams.forEach((value, key) => {\n    if (typeof query[key] === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(query[key])) {\n      ;(query[key] as string[]).push(value)\n    } else {\n      query[key] = [query[key] as string, value]\n    }\n  })\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: string): string {\n  if (\n    typeof param === 'string' ||\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(\n  urlQuery: ParsedUrlQuery\n): URLSearchParams {\n  const result = new URLSearchParams()\n  Object.entries(urlQuery).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      value.forEach((item) => result.append(key, stringifyUrlQueryParam(item)))\n    } else {\n      result.set(key, stringifyUrlQueryParam(value))\n    }\n  })\n  return result\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  searchParamsList.forEach((searchParams) => {\n    Array.from(searchParams.keys()).forEach((key) => target.delete(key))\n    searchParams.forEach((value, key) => target.append(key, value))\n  })\n  return target\n}\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport { UrlObject } from 'url'\nimport { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n","var _typeof = require(\"../helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","/**\n * Removes the trailing slash of a path if there is one. Preserves the root path `/`.\n */\nexport function removePathTrailingSlash(path: string): string {\n  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path\n}\n\n/**\n * Normalizes the trailing slash of a path according to the `trailingSlash` option\n * in `next.config.js`.\n */\nexport const normalizePathTrailingSlash = process.env.__NEXT_TRAILING_SLASH\n  ? (path: string): string => {\n      if (/\\.[^/]+\\/?$/.test(path)) {\n        return removePathTrailingSlash(path)\n      } else if (path.endsWith('/')) {\n        return path\n      } else {\n        return path + '/'\n      }\n    }\n  : removePathTrailingSlash\n","interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\n// this isn't importing the escape-string-regex module\n// to reduce bytes\nfunction escapeRegex(str: string) {\n  return str.replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&')\n}\n\nfunction parseParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nexport function getRouteRegex(\n  normalizedRoute: string\n): {\n  re: RegExp\n  namedRegex?: string\n  routeKeys?: { [named: string]: string }\n  groups: { [groupName: string]: Group }\n} {\n  const segments = (normalizedRoute.replace(/\\/$/, '') || '/')\n    .slice(1)\n    .split('/')\n\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n  const parameterizedRoute = segments\n    .map((segment) => {\n      if (segment.startsWith('[') && segment.endsWith(']')) {\n        const { key, optional, repeat } = parseParameter(segment.slice(1, -1))\n        groups[key] = { pos: groupIndex++, repeat, optional }\n        return repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n      } else {\n        return `/${escapeRegex(segment)}`\n      }\n    })\n    .join('')\n\n  // dead code eliminate for browser since it's only needed\n  // while generating routes-manifest\n  if (typeof window === 'undefined') {\n    let routeKeyCharCode = 97\n    let routeKeyCharLength = 1\n\n    // builds a minimal routeKey using only a-z and minimal number of characters\n    const getSafeRouteKey = () => {\n      let routeKey = ''\n\n      for (let i = 0; i < routeKeyCharLength; i++) {\n        routeKey += String.fromCharCode(routeKeyCharCode)\n        routeKeyCharCode++\n\n        if (routeKeyCharCode > 122) {\n          routeKeyCharLength++\n          routeKeyCharCode = 97\n        }\n      }\n      return routeKey\n    }\n\n    const routeKeys: { [named: string]: string } = {}\n\n    let namedParameterizedRoute = segments\n      .map((segment) => {\n        if (segment.startsWith('[') && segment.endsWith(']')) {\n          const { key, optional, repeat } = parseParameter(segment.slice(1, -1))\n          // replace any non-word characters since they can break\n          // the named regex\n          let cleanedKey = key.replace(/\\W/g, '')\n          let invalidKey = false\n\n          // check if the key is still invalid and fallback to using a known\n          // safe key\n          if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n            invalidKey = true\n          }\n          if (!isNaN(parseInt(cleanedKey.substr(0, 1)))) {\n            invalidKey = true\n          }\n\n          if (invalidKey) {\n            cleanedKey = getSafeRouteKey()\n          }\n\n          routeKeys[cleanedKey] = key\n          return repeat\n            ? optional\n              ? `(?:/(?<${cleanedKey}>.+?))?`\n              : `/(?<${cleanedKey}>.+?)`\n            : `/(?<${cleanedKey}>[^/]+?)`\n        } else {\n          return `/${escapeRegex(segment)}`\n        }\n      })\n      .join('')\n\n    return {\n      re: new RegExp(`^${parameterizedRoute}(?:/)?$`),\n      groups,\n      routeKeys,\n      namedRegex: `^${namedParameterizedRoute}(?:/)?$`,\n    }\n  }\n\n  return {\n    re: new RegExp(`^${parameterizedRoute}(?:/)?$`),\n    groups,\n  }\n}\n","/*\nMIT License\n\nCopyright (c) Jason Miller (https://jasonformat.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js\n// It's been edited for the needs of this script\n// See the LICENSE at the top of the file\n\ntype Handler = (...evts: any[]) => void\n\nexport type MittEmitter = {\n  on(type: string, handler: Handler): void\n  off(type: string, handler: Handler): void\n  emit(type: string, ...evts: any[]): void\n}\n\nexport default function mitt(): MittEmitter {\n  const all: { [s: string]: Handler[] } = Object.create(null)\n\n  return {\n    on(type: string, handler: Handler) {\n      ;(all[type] || (all[type] = [])).push(handler)\n    },\n\n    off(type: string, handler: Handler) {\n      if (all[type]) {\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1)\n      }\n    },\n\n    emit(type: string, ...evts: any[]) {\n      // eslint-disable-next-line array-callback-return\n      ;(all[type] || []).slice().map((handler: Handler) => {\n        handler(...evts)\n      })\n    },\n  }\n}\n","/* global __NEXT_DATA__ */\n// tslint:disable:no-console\nimport { ParsedUrlQuery } from 'querystring'\nimport { ComponentType } from 'react'\nimport { UrlObject } from 'url'\nimport {\n  normalizePathTrailingSlash,\n  removePathTrailingSlash,\n} from '../../../client/normalize-trailing-slash'\nimport { GoodPageCache, StyleSheetTuple } from '../../../client/page-loader'\nimport { denormalizePagePath } from '../../server/denormalize-page-path'\nimport mitt, { MittEmitter } from '../mitt'\nimport {\n  AppContextType,\n  formatWithValidation,\n  getLocationOrigin,\n  getURL,\n  loadGetInitialProps,\n  NextPageContext,\n  ST,\n} from '../utils'\nimport { isDynamicRoute } from './utils/is-dynamic'\nimport { parseRelativeUrl } from './utils/parse-relative-url'\nimport { searchParamsToUrlQuery } from './utils/querystring'\nimport resolveRewrites from './utils/resolve-rewrites'\nimport { getRouteMatcher } from './utils/route-matcher'\nimport { getRouteRegex } from './utils/route-regex'\nimport escapePathDelimiters from './utils/escape-path-delimiters'\n\ninterface TransitionOptions {\n  shallow?: boolean\n  locale?: string | false\n}\n\ninterface NextHistoryState {\n  url: string\n  as: string\n  options: TransitionOptions\n}\n\ntype HistoryState = null | { __N: false } | ({ __N: true } & NextHistoryState)\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true,\n  })\n}\n\nfunction addPathPrefix(path: string, prefix?: string) {\n  return prefix && path.startsWith('/')\n    ? path === '/'\n      ? normalizePathTrailingSlash(prefix)\n      : `${prefix}${path}`\n    : path\n}\n\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string\n) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return locale &&\n      locale !== defaultLocale &&\n      !path.startsWith('/' + locale + '/') &&\n      path !== '/' + locale\n      ? addPathPrefix(path, '/' + locale)\n      : path\n  }\n  return path\n}\n\nexport function delLocale(path: string, locale?: string) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return locale &&\n      (path.startsWith('/' + locale + '/') || path === '/' + locale)\n      ? path.substr(locale.length + 1) || '/'\n      : path\n  }\n  return path\n}\n\nexport function hasBasePath(path: string): boolean {\n  return path === basePath || path.startsWith(basePath + '/')\n}\n\nexport function addBasePath(path: string): string {\n  // we only add the basepath on relative urls\n  return addPathPrefix(path, basePath)\n}\n\nexport function delBasePath(path: string): string {\n  return path.slice(basePath.length) || '/'\n}\n\n/**\n * Detects whether a given url is routable by the Next.js router (browser only).\n */\nexport function isLocalURL(url: string): boolean {\n  if (url.startsWith('/')) return true\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = getLocationOrigin()\n    const resolved = new URL(url, locationOrigin)\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname)\n  } catch (_) {\n    return false\n  }\n}\n\ntype Url = UrlObject | string\n\nexport function interpolateAs(\n  route: string,\n  asPathname: string,\n  query: ParsedUrlQuery\n) {\n  let interpolatedRoute = ''\n\n  const dynamicRegex = getRouteRegex(route)\n  const dynamicGroups = dynamicRegex.groups\n  const dynamicMatches =\n    // Try to match the dynamic route against the asPath\n    (asPathname !== route ? getRouteMatcher(dynamicRegex)(asPathname) : '') ||\n    // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query\n\n  interpolatedRoute = route\n  const params = Object.keys(dynamicGroups)\n\n  if (\n    !params.every((param) => {\n      let value = dynamicMatches[param] || ''\n      const { repeat, optional } = dynamicGroups[param]\n\n      // support single-level catch-all\n      // TODO: more robust handling for user-error (passing `/`)\n      let replaced = `[${repeat ? '...' : ''}${param}]`\n      if (optional) {\n        replaced = `${!value ? '/' : ''}[${replaced}]`\n      }\n      if (repeat && !Array.isArray(value)) value = [value]\n\n      return (\n        (optional || param in dynamicMatches) &&\n        // Interpolate group into data URL if present\n        (interpolatedRoute =\n          interpolatedRoute!.replace(\n            replaced,\n            repeat\n              ? (value as string[]).map(escapePathDelimiters).join('/')\n              : escapePathDelimiters(value as string)\n          ) || '/')\n      )\n    })\n  ) {\n    interpolatedRoute = '' // did not satisfy all requirements\n\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n  return {\n    params,\n    result: interpolatedRoute,\n  }\n}\n\nfunction omitParmsFromQuery(query: ParsedUrlQuery, params: string[]) {\n  const filteredQuery: ParsedUrlQuery = {}\n\n  Object.keys(query).forEach((key) => {\n    if (!params.includes(key)) {\n      filteredQuery[key] = query[key]\n    }\n  })\n  return filteredQuery\n}\n\n/**\n * Resolves a given hyperlink with a certain router state (basePath not included).\n * Preserves absolute urls.\n */\nexport function resolveHref(\n  currentPath: string,\n  href: Url,\n  resolveAs?: boolean\n): string {\n  // we use a dummy base url for relative urls\n  const base = new URL(currentPath, 'http://n')\n  const urlAsString =\n    typeof href === 'string' ? href : formatWithValidation(href)\n  try {\n    const finalUrl = new URL(urlAsString, base)\n    finalUrl.pathname = normalizePathTrailingSlash(finalUrl.pathname)\n    let interpolatedAs = ''\n\n    if (\n      isDynamicRoute(finalUrl.pathname) &&\n      finalUrl.searchParams &&\n      resolveAs\n    ) {\n      const query = searchParamsToUrlQuery(finalUrl.searchParams)\n\n      const { result, params } = interpolateAs(\n        finalUrl.pathname,\n        finalUrl.pathname,\n        query\n      )\n\n      if (result) {\n        interpolatedAs = formatWithValidation({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omitParmsFromQuery(query, params),\n        })\n      }\n    }\n\n    // if the origin didn't change, it means we received a relative href\n    const resolvedHref =\n      finalUrl.origin === base.origin\n        ? finalUrl.href.slice(finalUrl.origin.length)\n        : finalUrl.href\n\n    return (resolveAs\n      ? [resolvedHref, interpolatedAs || resolvedHref]\n      : resolvedHref) as string\n  } catch (_) {\n    return (resolveAs ? [urlAsString] : urlAsString) as string\n  }\n}\n\nconst PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR')\nexport function markLoadingError(err: Error): Error {\n  return Object.defineProperty(err, PAGE_LOAD_ERROR, {})\n}\n\nfunction prepareUrlAs(router: NextRouter, url: Url, as: Url) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  return {\n    url: addBasePath(resolveHref(router.pathname, url)),\n    as: as ? addBasePath(resolveHref(router.pathname, as)) : as,\n  }\n}\n\nexport type BaseRouter = {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n}\n\nexport type NextRouter = BaseRouter &\n  Pick<\n    Router,\n    | 'push'\n    | 'replace'\n    | 'reload'\n    | 'back'\n    | 'prefetch'\n    | 'beforePopState'\n    | 'events'\n    | 'isFallback'\n  >\n\nexport type PrefetchOptions = {\n  priority?: boolean\n  locale?: string | false\n}\n\nexport type PrivateRouteInfo = {\n  Component: ComponentType\n  styleSheets: StyleSheetTuple[]\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n  props?: Record<string, any>\n  err?: Error\n  error?: any\n}\n\nexport type AppProps = Pick<PrivateRouteInfo, 'Component' | 'err'> & {\n  router: Router\n} & Record<string, any>\nexport type AppComponent = ComponentType<AppProps>\n\ntype Subscription = (data: PrivateRouteInfo, App: AppComponent) => Promise<void>\n\ntype BeforePopStateCallback = (state: NextHistoryState) => boolean\n\ntype ComponentLoadCancel = (() => void) | null\n\ntype HistoryMethod = 'replaceState' | 'pushState'\n\nconst manualScrollRestoration =\n  process.env.__NEXT_SCROLL_RESTORATION &&\n  typeof window !== 'undefined' &&\n  'scrollRestoration' in window.history\n\nconst SSG_DATA_NOT_FOUND_ERROR = 'SSG Data NOT_FOUND'\n\nfunction fetchRetry(url: string, attempts: number): Promise<any> {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin',\n  }).then((res) => {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1)\n      }\n      if (res.status === 404) {\n        // TODO: handle reloading in development from fallback returning 200\n        // to on-demand-entry-handler causing it to reload periodically\n        throw new Error(SSG_DATA_NOT_FOUND_ERROR)\n      }\n      throw new Error(`Failed to load static props`)\n    }\n    return res.json()\n  })\n}\n\nfunction fetchNextData(dataHref: string, isServerRender: boolean) {\n  return fetchRetry(dataHref, isServerRender ? 3 : 1).catch((err: Error) => {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n\n    if (!isServerRender) {\n      markLoadingError(err)\n    }\n    throw err\n  })\n}\n\nexport default class Router implements BaseRouter {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n\n  /**\n   * Map of all components loaded in `Router`\n   */\n  components: { [pathname: string]: PrivateRouteInfo }\n  // Static Data Cache\n  sdc: { [asPath: string]: object } = {}\n  sub: Subscription\n  clc: ComponentLoadCancel\n  pageLoader: any\n  _bps: BeforePopStateCallback | undefined\n  events: MittEmitter\n  _wrapApp: (App: AppComponent) => any\n  isSsr: boolean\n  isFallback: boolean\n  _inFlightRoute?: string\n  _shallow?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n\n  static events: MittEmitter = mitt()\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    {\n      initialProps,\n      pageLoader,\n      App,\n      wrapApp,\n      Component,\n      initialStyleSheets,\n      err,\n      subscription,\n      isFallback,\n      locale,\n      locales,\n      defaultLocale,\n    }: {\n      subscription: Subscription\n      initialProps: any\n      pageLoader: any\n      Component: ComponentType\n      initialStyleSheets: StyleSheetTuple[]\n      App: AppComponent\n      wrapApp: (App: AppComponent) => any\n      err?: Error\n      isFallback: boolean\n      locale?: string\n      locales?: string[]\n      defaultLocale?: string\n    }\n  ) {\n    // represents the current component key\n    this.route = removePathTrailingSlash(pathname)\n\n    // set up the component cache (by route keys)\n    this.components = {}\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component,\n        styleSheets: initialStyleSheets,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n      }\n    }\n\n    this.components['/_app'] = {\n      Component: App as ComponentType,\n      styleSheets: [\n        /* /_app does not need its stylesheets managed */\n      ],\n    }\n\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events\n\n    this.pageLoader = pageLoader\n    this.pathname = pathname\n    this.query = query\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n      // @ts-ignore this is temporarily global (attached to window)\n      isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as\n    this.basePath = basePath\n    this.sub = subscription\n    this.clc = null\n    this._wrapApp = wrapApp\n    // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true\n\n    this.isFallback = isFallback\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      this.locale = locale\n      this.locales = locales\n      this.defaultLocale = defaultLocale\n    }\n\n    if (typeof window !== 'undefined') {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState(\n          'replaceState',\n          formatWithValidation({ pathname: addBasePath(pathname), query }),\n          getURL()\n        )\n      }\n\n      window.addEventListener('popstate', this.onPopState)\n\n      // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration) {\n          window.history.scrollRestoration = 'manual'\n\n          let scrollDebounceTimeout: undefined | NodeJS.Timeout\n\n          const debouncedScrollSave = () => {\n            if (scrollDebounceTimeout) clearTimeout(scrollDebounceTimeout)\n\n            scrollDebounceTimeout = setTimeout(() => {\n              const { url, as: curAs, options } = history.state\n              this.changeState(\n                'replaceState',\n                url,\n                curAs,\n                Object.assign({}, options, {\n                  _N_X: window.scrollX,\n                  _N_Y: window.scrollY,\n                })\n              )\n            }, 10)\n          }\n\n          window.addEventListener('scroll', debouncedScrollSave)\n        }\n      }\n    }\n  }\n\n  onPopState = (e: PopStateEvent): void => {\n    const state = e.state as HistoryState\n\n    if (!state) {\n      // We get state as undefined for two reasons.\n      //  1. With older safari (< 8) and older chrome (< 34)\n      //  2. When the URL changed with #\n      //\n      // In the both cases, we don't need to proceed and change the route.\n      // (as it's already changed)\n      // But we can simply replace the state with the new changes.\n      // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n      // So, doing the following for (1) does no harm.\n      const { pathname, query } = this\n      this.changeState(\n        'replaceState',\n        formatWithValidation({ pathname: addBasePath(pathname), query }),\n        getURL()\n      )\n      return\n    }\n\n    if (!state.__N) {\n      return\n    }\n\n    const { url, as, options } = state\n\n    const { pathname } = parseRelativeUrl(url)\n\n    // Make sure we don't re-render on initial load,\n    // can be caused by navigating back from an external site\n    if (this.isSsr && as === this.asPath && pathname === this.pathname) {\n      return\n    }\n\n    // If the downstream application returns falsy, return.\n    // They will then be responsible for handling the event.\n    if (this._bps && !this._bps(state)) {\n      return\n    }\n\n    this.change(\n      'replaceState',\n      url,\n      as,\n      Object.assign({}, options, {\n        shallow: options.shallow && this._shallow,\n        locale: options.locale || this.defaultLocale,\n      })\n    )\n  }\n\n  reload(): void {\n    window.location.reload()\n  }\n\n  /**\n   * Go back in history\n   */\n  back() {\n    window.history.back()\n  }\n\n  /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  push(url: Url, as: Url = url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('pushState', url, as, options)\n  }\n\n  /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  replace(url: Url, as: Url = url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('replaceState', url, as, options)\n  }\n\n  async change(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions\n  ): Promise<boolean> {\n    if (!isLocalURL(url)) {\n      window.location.href = url\n      return false\n    }\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      this.locale = options.locale || this.locale\n\n      if (typeof options.locale === 'undefined') {\n        options.locale = this.locale\n      }\n\n      const {\n        normalizeLocalePath,\n      } = require('../i18n/normalize-locale-path') as typeof import('../i18n/normalize-locale-path')\n\n      const localePathResult = normalizeLocalePath(as, this.locales)\n\n      if (localePathResult.detectedLocale) {\n        this.locale = localePathResult.detectedLocale\n        url = localePathResult.pathname\n      }\n    }\n\n    if (!(options as any)._h) {\n      this.isSsr = false\n    }\n    // marking route changes as a navigation start entry\n    if (ST) {\n      performance.mark('routeChange')\n    }\n\n    if (this._inFlightRoute) {\n      this.abortComponentLoad(this._inFlightRoute)\n    }\n\n    as = addLocale(as, options.locale, this.defaultLocale)\n    const cleanedAs = delLocale(\n      hasBasePath(as) ? delBasePath(as) : as,\n      this.locale\n    )\n    this._inFlightRoute = as\n\n    // If the url change is only related to a hash change\n    // We should not proceed. We should only change the state.\n\n    // WARNING: `_h` is an internal option for handing Next.js client-side\n    // hydration. Your app should _never_ use this property. It may change at\n    // any time without notice.\n    if (!(options as any)._h && this.onlyAHashChange(cleanedAs)) {\n      this.asPath = cleanedAs\n      Router.events.emit('hashChangeStart', as)\n      // TODO: do we need the resolved href when only a hash change?\n      this.changeState(method, url, as, options)\n      this.scrollToHash(cleanedAs)\n      this.notify(this.components[this.route])\n      Router.events.emit('hashChangeComplete', as)\n      return true\n    }\n\n    // The build manifest needs to be loaded before auto-static dynamic pages\n    // get their query parameters to allow ensuring they can be parsed properly\n    // when rewritten to\n    const pages = await this.pageLoader.getPageList()\n    const { __rewrites: rewrites } = await this.pageLoader.promisedBuildManifest\n\n    let parsed = parseRelativeUrl(url)\n\n    let { pathname, query } = parsed\n\n    parsed = this._resolveHref(parsed, pages) as typeof parsed\n\n    if (parsed.pathname !== pathname) {\n      pathname = parsed.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    // url and as should always be prefixed with basePath by this\n    // point by either next/link or router.push/replace so strip the\n    // basePath from the pathname to match the pages dir 1-to-1\n    pathname = pathname\n      ? removePathTrailingSlash(delBasePath(pathname))\n      : pathname\n\n    // If asked to change the current URL we should reload the current page\n    // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n    // We also need to set the method = replaceState always\n    // as this should not go into the history (That's how browsers work)\n    // We should compare the new asPath to the current asPath, not the url\n    if (!this.urlIsNew(cleanedAs)) {\n      method = 'replaceState'\n    }\n\n    let route = removePathTrailingSlash(pathname)\n    const { shallow = false } = options\n\n    // we need to resolve the as value using rewrites for dynamic SSG\n    // pages to allow building the data URL correctly\n    let resolvedAs = as\n\n    if (process.env.__NEXT_HAS_REWRITES) {\n      resolvedAs = resolveRewrites(\n        parseRelativeUrl(as).pathname,\n        pages,\n        basePath,\n        rewrites,\n        query,\n        (p: string) => this._resolveHref({ pathname: p }, pages).pathname!\n      )\n\n      if (resolvedAs !== as) {\n        const potentialHref = removePathTrailingSlash(\n          this._resolveHref(\n            Object.assign({}, parsed, { pathname: resolvedAs }),\n            pages,\n            false\n          ).pathname!\n        )\n\n        // if this directly matches a page we need to update the href to\n        // allow the correct page chunk to be loaded\n        if (pages.includes(potentialHref)) {\n          route = potentialHref\n          pathname = potentialHref\n          parsed.pathname = pathname\n          url = formatWithValidation(parsed)\n        }\n      }\n    }\n    resolvedAs = delLocale(delBasePath(resolvedAs), this.locale)\n\n    if (isDynamicRoute(route)) {\n      const parsedAs = parseRelativeUrl(resolvedAs)\n      const asPathname = parsedAs.pathname\n\n      const routeRegex = getRouteRegex(route)\n      const routeMatch = getRouteMatcher(routeRegex)(asPathname)\n      const shouldInterpolate = route === asPathname\n      const interpolatedAs = shouldInterpolate\n        ? interpolateAs(route, asPathname, query)\n        : ({} as { result: undefined; params: undefined })\n\n      if (!routeMatch || (shouldInterpolate && !interpolatedAs.result)) {\n        const missingParams = Object.keys(routeRegex.groups).filter(\n          (param) => !query[param]\n        )\n\n        if (missingParams.length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `${\n                shouldInterpolate\n                  ? `Interpolating href`\n                  : `Mismatching \\`as\\` and \\`href\\``\n              } failed to manually provide ` +\n                `the params: ${missingParams.join(\n                  ', '\n                )} in the \\`href\\`'s \\`query\\``\n            )\n          }\n\n          throw new Error(\n            (shouldInterpolate\n              ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\n                  ', '\n                )}) to be interpolated properly. `\n              : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) +\n              `Read more: https://err.sh/vercel/next.js/${\n                shouldInterpolate\n                  ? 'href-interpolation-failed'\n                  : 'incompatible-href-as'\n              }`\n          )\n        }\n      } else if (shouldInterpolate) {\n        as = formatWithValidation(\n          Object.assign({}, parsedAs, {\n            pathname: interpolatedAs.result,\n            query: omitParmsFromQuery(query, interpolatedAs.params!),\n          })\n        )\n      } else {\n        // Merge params into `query`, overwriting any specified in search\n        Object.assign(query, routeMatch)\n      }\n    }\n\n    Router.events.emit('routeChangeStart', as)\n\n    try {\n      const routeInfo = await this.getRouteInfo(\n        route,\n        pathname,\n        query,\n        as,\n        shallow\n      )\n      let { error, props, __N_SSG, __N_SSP } = routeInfo\n\n      // handle redirect on client-transition\n      if (\n        (__N_SSG || __N_SSP) &&\n        props &&\n        (props as any).pageProps &&\n        (props as any).pageProps.__N_REDIRECT\n      ) {\n        const destination = (props as any).pageProps.__N_REDIRECT\n\n        // check if destination is internal (resolves to a page) and attempt\n        // client-navigation if it is falling back to hard navigation if\n        // it's not\n        if (destination.startsWith('/')) {\n          const parsedHref = parseRelativeUrl(destination)\n          this._resolveHref(parsedHref, pages)\n\n          if (pages.includes(parsedHref.pathname)) {\n            return this.change(method, destination, destination, options)\n          }\n        }\n\n        window.location.href = destination\n        return new Promise(() => {})\n      }\n\n      Router.events.emit('beforeHistoryChange', as)\n      this.changeState(\n        method,\n        url,\n        addLocale(as, options.locale, this.defaultLocale),\n        options\n      )\n\n      if (process.env.NODE_ENV !== 'production') {\n        const appComp: any = this.components['/_app'].Component\n        ;(window as any).next.isPrerendered =\n          appComp.getInitialProps === appComp.origGetInitialProps &&\n          !(routeInfo.Component as any).getInitialProps\n      }\n\n      await this.set(route, pathname!, query, cleanedAs, routeInfo).catch(\n        (e) => {\n          if (e.cancelled) error = error || e\n          else throw e\n        }\n      )\n\n      if (error) {\n        Router.events.emit('routeChangeError', error, cleanedAs)\n        throw error\n      }\n\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration && '_N_X' in options) {\n          window.scrollTo((options as any)._N_X, (options as any)._N_Y)\n        }\n      }\n\n      if (process.env.__NEXT_I18N_SUPPORT) {\n        if (this.locale) {\n          document.documentElement.lang = this.locale\n        }\n      }\n      Router.events.emit('routeChangeComplete', as)\n\n      return true\n    } catch (err) {\n      if (err.cancelled) {\n        return false\n      }\n      throw err\n    }\n  }\n\n  changeState(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions = {}\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`)\n        return\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`)\n        return\n      }\n    }\n\n    if (method !== 'pushState' || getURL() !== as) {\n      this._shallow = options.shallow\n      window.history[method](\n        {\n          url,\n          as,\n          options,\n          __N: true,\n        } as HistoryState,\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '',\n        as\n      )\n    }\n  }\n\n  async handleRouteInfoError(\n    err: Error & { code: any; cancelled: boolean },\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    loadErrorFail?: boolean\n  ): Promise<PrivateRouteInfo> {\n    if (err.cancelled) {\n      // bubble up cancellation errors\n      throw err\n    }\n\n    if (PAGE_LOAD_ERROR in err || loadErrorFail) {\n      Router.events.emit('routeChangeError', err, as)\n\n      // If we can't load the page it could be one of following reasons\n      //  1. Page doesn't exists\n      //  2. Page does exist in a different zone\n      //  3. Internal error while loading the page\n\n      // So, doing a hard reload is the proper way to deal with this.\n      window.location.href = as\n\n      // Changing the URL doesn't block executing the current code path.\n      // So let's throw a cancellation error stop the routing logic.\n      throw buildCancellationError()\n    }\n\n    try {\n      let Component: ComponentType\n      let styleSheets: StyleSheetTuple[]\n      let props: Record<string, any> | undefined\n      const ssg404 = err.message === SSG_DATA_NOT_FOUND_ERROR\n\n      if (ssg404) {\n        try {\n          let mod: any\n          ;({ page: Component, styleSheets, mod } = await this.fetchComponent(\n            '/404'\n          ))\n\n          // TODO: should we tolerate these props missing and still render the\n          // page instead of falling back to _error?\n          if (mod && mod.__N_SSG) {\n            props = await this._getStaticData(\n              this.pageLoader.getDataHref('/404', '/404', true, this.locale)\n            )\n          }\n        } catch (_err) {\n          // non-fatal fallback to _error\n        }\n      }\n\n      if (\n        typeof Component! === 'undefined' ||\n        typeof styleSheets! === 'undefined'\n      ) {\n        ;({ page: Component, styleSheets } = await this.fetchComponent(\n          '/_error'\n        ))\n      }\n\n      const routeInfo: PrivateRouteInfo = {\n        props,\n        Component,\n        styleSheets,\n        err: ssg404 ? undefined : err,\n        error: ssg404 ? undefined : err,\n      }\n\n      if (!routeInfo.props) {\n        try {\n          routeInfo.props = await this.getInitialProps(Component, {\n            err,\n            pathname,\n            query,\n          } as any)\n        } catch (gipErr) {\n          console.error('Error in error page `getInitialProps`: ', gipErr)\n          routeInfo.props = {}\n        }\n      }\n\n      return routeInfo\n    } catch (routeInfoErr) {\n      return this.handleRouteInfoError(routeInfoErr, pathname, query, as, true)\n    }\n  }\n\n  async getRouteInfo(\n    route: string,\n    pathname: string,\n    query: any,\n    as: string,\n    shallow: boolean = false\n  ): Promise<PrivateRouteInfo> {\n    try {\n      const cachedRouteInfo = this.components[route]\n\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return cachedRouteInfo\n      }\n\n      const routeInfo: PrivateRouteInfo = cachedRouteInfo\n        ? cachedRouteInfo\n        : await this.fetchComponent(route).then((res) => ({\n            Component: res.page,\n            styleSheets: res.styleSheets,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP,\n          }))\n\n      const { Component, __N_SSG, __N_SSP } = routeInfo\n\n      if (process.env.NODE_ENV !== 'production') {\n        const { isValidElementType } = require('react-is')\n        if (!isValidElementType(Component)) {\n          throw new Error(\n            `The default export is not a React Component in page: \"${pathname}\"`\n          )\n        }\n      }\n\n      let dataHref: string | undefined\n\n      if (__N_SSG || __N_SSP) {\n        dataHref = this.pageLoader.getDataHref(\n          formatWithValidation({ pathname, query }),\n          delBasePath(as),\n          __N_SSG,\n          this.locale\n        )\n      }\n\n      const props = await this._getData<PrivateRouteInfo>(() =>\n        __N_SSG\n          ? this._getStaticData(dataHref!)\n          : __N_SSP\n          ? this._getServerData(dataHref!)\n          : this.getInitialProps(\n              Component,\n              // we provide AppTree later so this needs to be `any`\n              {\n                pathname,\n                query,\n                asPath: as,\n              } as any\n            )\n      )\n\n      routeInfo.props = props\n      this.components[route] = routeInfo\n      return routeInfo\n    } catch (err) {\n      return this.handleRouteInfoError(err, pathname, query, as)\n    }\n  }\n\n  set(\n    route: string,\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    data: PrivateRouteInfo\n  ): Promise<void> {\n    this.isFallback = false\n\n    this.route = route\n    this.pathname = pathname\n    this.query = query\n    this.asPath = as\n    return this.notify(data)\n  }\n\n  /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */\n  beforePopState(cb: BeforePopStateCallback) {\n    this._bps = cb\n  }\n\n  onlyAHashChange(as: string): boolean {\n    if (!this.asPath) return false\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#')\n    const [newUrlNoHash, newHash] = as.split('#')\n\n    // Makes sure we scroll to the provided hash if the url/hash are the same\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true\n    }\n\n    // If the urls are change, there's more than a hash change\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false\n    }\n\n    // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n    return oldHash !== newHash\n  }\n\n  scrollToHash(as: string): void {\n    const [, hash] = as.split('#')\n    // Scroll to top if the hash is just `#` with no value\n    if (hash === '') {\n      window.scrollTo(0, 0)\n      return\n    }\n\n    // First we check if the element by id is found\n    const idEl = document.getElementById(hash)\n    if (idEl) {\n      idEl.scrollIntoView()\n      return\n    }\n    // If there's no element with the id, we check the `name` property\n    // To mirror browsers\n    const nameEl = document.getElementsByName(hash)[0]\n    if (nameEl) {\n      nameEl.scrollIntoView()\n    }\n  }\n\n  urlIsNew(asPath: string): boolean {\n    return this.asPath !== asPath\n  }\n\n  _resolveHref(parsedHref: UrlObject, pages: string[], applyBasePath = true) {\n    const { pathname } = parsedHref\n    const cleanPathname = removePathTrailingSlash(\n      denormalizePagePath(applyBasePath ? delBasePath(pathname!) : pathname!)\n    )\n\n    if (cleanPathname === '/404' || cleanPathname === '/_error') {\n      return parsedHref\n    }\n\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname!)) {\n      // eslint-disable-next-line array-callback-return\n      pages.some((page) => {\n        if (\n          isDynamicRoute(page) &&\n          getRouteRegex(page).re.test(cleanPathname!)\n        ) {\n          parsedHref.pathname = applyBasePath ? addBasePath(page) : page\n          return true\n        }\n      })\n    }\n    return parsedHref\n  }\n\n  /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */\n  async prefetch(\n    url: string,\n    asPath: string = url,\n    options: PrefetchOptions = {}\n  ): Promise<void> {\n    let parsed = parseRelativeUrl(url)\n\n    let { pathname } = parsed\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      const normalizeLocalePath = require('../i18n/normalize-locale-path')\n        .normalizeLocalePath as typeof import('../i18n/normalize-locale-path').normalizeLocalePath\n\n      if (options.locale === false) {\n        pathname = normalizeLocalePath!(pathname, this.locales).pathname\n        parsed.pathname = pathname\n        url = formatWithValidation(parsed)\n\n        let parsedAs = parseRelativeUrl(asPath)\n        const localePathResult = normalizeLocalePath!(\n          parsedAs.pathname,\n          this.locales\n        )\n        parsedAs.pathname = localePathResult.pathname\n        options.locale = localePathResult.detectedLocale || options.locale\n        asPath = formatWithValidation(parsedAs)\n      }\n    }\n\n    const pages = await this.pageLoader.getPageList()\n\n    parsed = this._resolveHref(parsed, pages) as typeof parsed\n\n    if (parsed.pathname !== pathname) {\n      pathname = parsed.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    // Prefetch is not supported in development mode because it would trigger on-demand-entries\n    if (process.env.NODE_ENV !== 'production') {\n      return\n    }\n\n    const route = removePathTrailingSlash(pathname)\n    await Promise.all([\n      this.pageLoader.prefetchData(\n        url,\n        asPath,\n        typeof options.locale !== 'undefined' ? options.locale : this.locale,\n        this.defaultLocale\n      ),\n      this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),\n    ])\n  }\n\n  async fetchComponent(route: string): Promise<GoodPageCache> {\n    let cancelled = false\n    const cancel = (this.clc = () => {\n      cancelled = true\n    })\n\n    const componentResult = await this.pageLoader.loadPage(route)\n\n    if (cancelled) {\n      const error: any = new Error(\n        `Abort fetching component for route: \"${route}\"`\n      )\n      error.cancelled = true\n      throw error\n    }\n\n    if (cancel === this.clc) {\n      this.clc = null\n    }\n\n    return componentResult\n  }\n\n  _getData<T>(fn: () => Promise<T>): Promise<T> {\n    let cancelled = false\n    const cancel = () => {\n      cancelled = true\n    }\n    this.clc = cancel\n    return fn().then((data) => {\n      if (cancel === this.clc) {\n        this.clc = null\n      }\n\n      if (cancelled) {\n        const err: any = new Error('Loading initial props cancelled')\n        err.cancelled = true\n        throw err\n      }\n\n      return data\n    })\n  }\n\n  _getStaticData(dataHref: string): Promise<object> {\n    const { href: cacheKey } = new URL(dataHref, window.location.href)\n    if (process.env.NODE_ENV === 'production' && this.sdc[cacheKey]) {\n      return Promise.resolve(this.sdc[cacheKey])\n    }\n    return fetchNextData(dataHref, this.isSsr).then((data) => {\n      this.sdc[cacheKey] = data\n      return data\n    })\n  }\n\n  _getServerData(dataHref: string): Promise<object> {\n    return fetchNextData(dataHref, this.isSsr)\n  }\n\n  getInitialProps(\n    Component: ComponentType,\n    ctx: NextPageContext\n  ): Promise<any> {\n    const { Component: App } = this.components['/_app']\n    const AppTree = this._wrapApp(App as AppComponent)\n    ctx.AppTree = AppTree\n    return loadGetInitialProps<AppContextType<Router>>(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx,\n    })\n  }\n\n  abortComponentLoad(as: string): void {\n    if (this.clc) {\n      Router.events.emit('routeChangeError', buildCancellationError(), as)\n      this.clc()\n      this.clc = null\n    }\n  }\n\n  notify(data: PrivateRouteInfo): Promise<void> {\n    return this.sub(data, this.components['/_app'].Component as AppComponent)\n  }\n}\n","// escape delimiters used by path-to-regexp\nexport default function escapePathDelimiters(segment: string): string {\n  return segment.replace(/[/#?]/g, (char: string) => encodeURIComponent(char))\n}\n","import { IncomingMessage, ServerResponse } from 'http'\nimport { ParsedUrlQuery } from 'querystring'\nimport { ComponentType } from 'react'\nimport { UrlObject } from 'url'\nimport { formatUrl } from './router/utils/format-url'\nimport { ManifestItem } from '../server/load-components'\nimport { NextRouter } from './router/router'\nimport { Env } from '@next/env'\nimport { BuildManifest } from '../server/get-page-files'\n\n/**\n * Types used by both next and next-server\n */\n\nexport type NextComponentType<\n  C extends BaseContext = NextPageContext,\n  IP = {},\n  P = {}\n> = ComponentType<P> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param ctx Context of `page`\n   */\n  getInitialProps?(context: C): IP | Promise<IP>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n> & {\n  renderDocument(\n    Document: DocumentType,\n    props: DocumentProps\n  ): React.ReactElement\n}\n\nexport type AppType = NextComponentType<\n  AppContextType,\n  AppInitialProps,\n  AppPropsType\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport type NextWebVitalsMetric = {\n  id: string\n  label: string\n  name: string\n  startTime: number\n  value: number\n}\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => RenderPageResult | Promise<RenderPageResult>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type HeadEntry = [string, { [key: string]: any }]\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  dynamicIds?: string[]\n  err?: Error & { statusCode?: number }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  head: HeadEntry[]\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<R extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: R\n}\n\nexport type AppInitialProps = {\n  pageProps: any\n}\n\nexport type AppPropsType<\n  R extends NextRouter = NextRouter,\n  P = {}\n> = AppInitialProps & {\n  Component: NextComponentType<NextPageContext, any, P>\n  router: R\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | React.ReactFragment\n}\n\nexport type DocumentProps = DocumentInitialProps & {\n  __NEXT_DATA__: NEXT_DATA\n  dangerousAsPath: string\n  docComponentsRendered: {\n    Html?: boolean\n    Main?: boolean\n    Head?: boolean\n    NextScript?: boolean\n  }\n  buildManifest: BuildManifest\n  ampPath: string\n  inAmpMode: boolean\n  hybridAmp: boolean\n  isDevelopment: boolean\n  dynamicImports: ManifestItem[]\n  assetPrefix?: string\n  canonicalBase: string\n  headTags: any[]\n  unstable_runtimeJS?: false\n  devOnlyCacheBusterQueryString: string\n  locale?: string\n}\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: {\n    [key: string]: string | string[]\n  }\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: {\n    [key: string]: string\n  }\n\n  body: any\n\n  env: Env\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: any\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<T = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<T>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<T>\n  status: (statusCode: number) => NextApiResponse<T>\n  redirect(url: string): NextApiResponse<T>\n  redirect(status: number, url: string): NextApiResponse<T>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n    }\n  ) => NextApiResponse<T>\n  clearPreviewData: () => NextApiResponse<T>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => void | Promise<void>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {}\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (urlObjectKeys.indexOf(key) === -1) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  typeof performance.mark === 'function' &&\n  typeof performance.measure === 'function'\n","import { getRouteRegex } from './route-regex'\n\nexport function getRouteMatcher(routeRegex: ReturnType<typeof getRouteRegex>) {\n  const { re, groups } = routeRegex\n  return (pathname: string | null | undefined) => {\n    const routeMatch = re.exec(pathname!)\n    if (!routeMatch) {\n      return false\n    }\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch (_) {\n        const err: Error & { code?: string } = new Error(\n          'failed to decode param'\n        )\n        err.code = 'DECODE_FAILED'\n        throw err\n      }\n    }\n    const params: { [paramName: string]: string | string[] } = {}\n\n    Object.keys(groups).forEach((slugName: string) => {\n      const g = groups[slugName]\n      const m = routeMatch[g.pos]\n      if (m !== undefined) {\n        params[slugName] = ~m.indexOf('/')\n          ? m.split('/').map((entry) => decode(entry))\n          : g.repeat\n          ? [decode(m)]\n          : decode(m)\n      }\n    })\n    return params\n  }\n}\n","import { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nconst DUMMY_BASE = new URL(\n  typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n)\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(url: string, base?: string) {\n  const resolvedBase = base ? new URL(base, DUMMY_BASE) : DUMMY_BASE\n  const {\n    pathname,\n    searchParams,\n    search,\n    hash,\n    href,\n    origin,\n    protocol,\n  } = new URL(url, resolvedBase)\n  if (\n    origin !== DUMMY_BASE.origin ||\n    (protocol !== 'http:' && protocol !== 'https:')\n  ) {\n    throw new Error('invariant: invalid relative URL')\n  }\n  return {\n    pathname,\n    query: searchParamsToUrlQuery(searchParams),\n    search,\n    hash,\n    href: href.slice(DUMMY_BASE.origin.length),\n  }\n}\n","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","/* global window */\nimport React from 'react'\nimport Router, { NextRouter } from '../next-server/lib/router/router'\nimport { RouterContext } from '../next-server/lib/router-context'\n\ntype ClassArguments<T> = T extends new (...args: infer U) => any ? U : any\n\ntype RouterArgs = ClassArguments<typeof Router>\n\ntype SingletonRouterBase = {\n  router: Router | null\n  readyCallbacks: Array<() => any>\n  ready(cb: () => any): void\n}\n\nexport { Router, NextRouter }\n\nexport type SingletonRouter = SingletonRouterBase & NextRouter\n\nconst singletonRouter: SingletonRouterBase = {\n  router: null, // holds the actual router instance\n  readyCallbacks: [],\n  ready(cb: () => void) {\n    if (this.router) return cb()\n    if (typeof window !== 'undefined') {\n      this.readyCallbacks.push(cb)\n    }\n  },\n}\n\n// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields = [\n  'pathname',\n  'route',\n  'query',\n  'asPath',\n  'components',\n  'isFallback',\n  'basePath',\n  'locale',\n  'locales',\n  'defaultLocale',\n]\nconst routerEvents = [\n  'routeChangeStart',\n  'beforeHistoryChange',\n  'routeChangeComplete',\n  'routeChangeError',\n  'hashChangeStart',\n  'hashChangeComplete',\n]\nconst coreMethodFields = [\n  'push',\n  'replace',\n  'reload',\n  'back',\n  'prefetch',\n  'beforePopState',\n]\n\n// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter, 'events', {\n  get() {\n    return Router.events\n  },\n})\n\nurlPropertyFields.forEach((field) => {\n  // Here we need to use Object.defineProperty because, we need to return\n  // the property assigned to the actual router\n  // The value might get changed as we change routes and this is the\n  // proper way to access it\n  Object.defineProperty(singletonRouter, field, {\n    get() {\n      const router = getRouter() as any\n      return router[field] as string\n    },\n  })\n})\n\ncoreMethodFields.forEach((field) => {\n  // We don't really know the types here, so we add them later instead\n  ;(singletonRouter as any)[field] = (...args: any[]) => {\n    const router = getRouter() as any\n    return router[field](...args)\n  }\n})\n\nrouterEvents.forEach((event) => {\n  singletonRouter.ready(() => {\n    Router.events.on(event, (...args) => {\n      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(\n        1\n      )}`\n      const _singletonRouter = singletonRouter as any\n      if (_singletonRouter[eventField]) {\n        try {\n          _singletonRouter[eventField](...args)\n        } catch (err) {\n          console.error(`Error when running the Router event: ${eventField}`)\n          console.error(`${err.message}\\n${err.stack}`)\n        }\n      }\n    })\n  })\n})\n\nfunction getRouter(): Router {\n  if (!singletonRouter.router) {\n    const message =\n      'No router instance found.\\n' +\n      'You should only use \"next/router\" inside the client side of your app.\\n'\n    throw new Error(message)\n  }\n  return singletonRouter.router\n}\n\n// Export the singletonRouter and this is the public API.\nexport default singletonRouter as SingletonRouter\n\n// Reexport the withRoute HOC\nexport { default as withRouter } from './with-router'\n\nexport function useRouter(): NextRouter {\n  return React.useContext(RouterContext)\n}\n\n// INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\nexport const createRouter = (...args: RouterArgs): Router => {\n  singletonRouter.router = new Router(...args)\n  singletonRouter.readyCallbacks.forEach((cb) => cb())\n  singletonRouter.readyCallbacks = []\n\n  return singletonRouter.router\n}\n\n// This function is used to create the `withRouter` router instance\nexport function makePublicRouterInstance(router: Router): NextRouter {\n  const _router = router as any\n  const instance = {} as any\n\n  for (const property of urlPropertyFields) {\n    if (typeof _router[property] === 'object') {\n      instance[property] = Object.assign(\n        Array.isArray(_router[property]) ? [] : {},\n        _router[property]\n      ) // makes sure query is not stateful\n      continue\n    }\n\n    instance[property] = _router[property]\n  }\n\n  // Events is a static property on the router, the router doesn't have to be initialized to use it\n  instance.events = Router.events\n\n  coreMethodFields.forEach((field) => {\n    instance[field] = (...args: any[]) => {\n      return _router[field](...args)\n    }\n  })\n\n  return instance\n}\n","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","import React from 'react'\nimport { NextRouter } from './router/router'\n\nexport const RouterContext = React.createContext<NextRouter>(null as any)\n\nif (process.env.NODE_ENV !== 'production') {\n  RouterContext.displayName = 'RouterContext'\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","module.exports = require(\"regenerator-runtime\");\n","\"use strict\";exports.__esModule=true;exports.normalizePathSep=normalizePathSep;exports.denormalizePagePath=denormalizePagePath;function normalizePathSep(path){return path.replace(/\\\\/g,'/');}function denormalizePagePath(page){page=normalizePathSep(page);if(page.startsWith('/index/')){page=page.slice(6);}else if(page==='/index'){page='/';}return page;}\n//# sourceMappingURL=denormalize-page-path.js.map","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;"],"sourceRoot":""}