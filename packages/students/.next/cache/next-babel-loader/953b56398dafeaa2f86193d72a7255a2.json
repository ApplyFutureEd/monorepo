{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/stepper/Stepper.tsx\";\nimport { faCheckCircle } from '@fortawesome/pro-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cx from 'classnames';\nimport useTranslation from 'next-translate/useTranslation';\n\nconst Step = props => {\n  const {\n    isCurrent,\n    isValidated,\n    label\n  } = props;\n  const iconBaseClasses = 'text-gray-400 text-lg';\n  const iconValidatedClasses = 'text-green-400';\n  const iconCurrentClasses = 'text-gray-700';\n  const iconClasses = cx({\n    [`${iconBaseClasses}`]: true,\n    [`${iconCurrentClasses}`]: isCurrent,\n    [`${iconValidatedClasses}`]: isValidated\n  });\n  const labelBaseClasses = 'text-gray-400 text-sm font-medium';\n  const labelValidatedClasses = 'text-gray-400';\n  const labelCurrentClasses = 'text-gray-700';\n  const labelClasses = cx({\n    [`${labelBaseClasses}`]: true,\n    [`${labelCurrentClasses}`]: isCurrent,\n    [`${labelValidatedClasses}`]: isValidated\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"flex items-center space-x-2\",\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      className: iconClasses,\n      icon: faCheckCircle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: labelClasses,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\nexport const Stepper = props => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    currentStep,\n    steps\n  } = props;\n  const progress = currentStep / steps.length * 100;\n  const progressPourcentage = `${progress}%`;\n  const size = 44;\n  const thickness = 3.6;\n  const circleProgress = (currentStep + 1) / steps.length * 100;\n  const circleStyle = {\n    strokeDasharray: '',\n    strokeDashoffset: ''\n  };\n  const circumference = 2 * Math.PI * ((size - thickness) / 2);\n  circleStyle.strokeDasharray = circumference.toFixed(3);\n  circleStyle.strokeDashoffset = `${((100 - circleProgress) / 100 * circumference).toFixed(3)}px`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hidden md:block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"flex justify-between\",\n          children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n            isCurrent: currentStep === index,\n            isValidated: currentStep > index,\n            label: step\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full h-2 bg-gray-300\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute w-full h-2 bg-indigo-500\",\n          style: {\n            width: progressPourcentage\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block md:hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative flex items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            role: \"progressbar\",\n            style: {\n              height: 56,\n              transform: 'rotate(-90deg)',\n              width: 56\n            },\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"block\",\n              viewBox: `${size / 2} ${size / 2} ${size} ${size}`,\n              children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"text-indigo-500 stroke-current\",\n                cx: size,\n                cy: size,\n                fill: \"white\",\n                r: (size - thickness) / 2,\n                strokeWidth: thickness,\n                style: circleStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 flex items-center justify-center font-bold\",\n            children: `${currentStep + 1} / ${steps.length}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-900 text-xl font-bold leading-5 sm:text-2xl sm:leading-6\",\n            children: steps[currentStep]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), steps[currentStep + 1] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:text-md mt-2 text-gray-900 leading-5 sm:leading-6\",\n            children: [t('common:next'), \": \", steps[currentStep + 1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/stepper/Stepper.tsx"],"names":["faCheckCircle","FontAwesomeIcon","cx","useTranslation","Step","props","isCurrent","isValidated","label","iconBaseClasses","iconValidatedClasses","iconCurrentClasses","iconClasses","labelBaseClasses","labelValidatedClasses","labelCurrentClasses","labelClasses","Stepper","t","currentStep","steps","progress","length","progressPourcentage","size","thickness","circleProgress","circleStyle","strokeDasharray","strokeDashoffset","circumference","Math","PI","toFixed","map","step","index","width","height","transform"],"mappings":"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","sourcesContent":["import { faCheckCircle } from '@fortawesome/pro-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cx from 'classnames';\nimport useTranslation from 'next-translate/useTranslation';\nimport { FC } from 'react';\n\ntype StepProps = {\n    isCurrent: boolean;\n    isValidated: boolean;\n    label: string;\n};\n\nconst Step: FC<StepProps> = (props) => {\n    const { isCurrent, isValidated, label } = props;\n\n    const iconBaseClasses = 'text-gray-400 text-lg';\n    const iconValidatedClasses = 'text-green-400';\n    const iconCurrentClasses = 'text-gray-700';\n\n    const iconClasses = cx({\n        [`${iconBaseClasses}`]: true,\n        [`${iconCurrentClasses}`]: isCurrent,\n        [`${iconValidatedClasses}`]: isValidated\n    });\n\n    const labelBaseClasses = 'text-gray-400 text-sm font-medium';\n    const labelValidatedClasses = 'text-gray-400';\n    const labelCurrentClasses = 'text-gray-700';\n\n    const labelClasses = cx({\n        [`${labelBaseClasses}`]: true,\n        [`${labelCurrentClasses}`]: isCurrent,\n        [`${labelValidatedClasses}`]: isValidated\n    });\n\n    return (\n        <li className=\"flex items-center space-x-2\">\n            <FontAwesomeIcon className={iconClasses} icon={faCheckCircle} />\n            <div className={labelClasses}>{label}</div>\n        </li>\n    );\n};\n\ntype Props = {\n    /**\n     * The index of the current step.\n     */\n    currentStep: number;\n    /**\n     * Array of strings representing each steps.\n     */\n    steps: Array<string>;\n};\n\nexport const Stepper: FC<Props> = (props) => {\n    const { t } = useTranslation();\n    const { currentStep, steps } = props;\n    const progress = (currentStep / steps.length) * 100;\n    const progressPourcentage = `${progress}%`;\n\n    const size = 44;\n    const thickness = 3.6;\n    const circleProgress = ((currentStep + 1) / steps.length) * 100;\n    const circleStyle = { strokeDasharray: '', strokeDashoffset: '' };\n    const circumference = 2 * Math.PI * ((size - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    circleStyle.strokeDashoffset = `${(((100 - circleProgress) / 100) * circumference).toFixed(\n        3\n    )}px`;\n\n    return (\n        <>\n            <div className=\"hidden md:block\">\n                <div className=\"mb-2\">\n                    <ul className=\"flex justify-between\">\n                        {steps.map((step, index) => (\n                            <Step\n                                key={index}\n                                isCurrent={currentStep === index}\n                                isValidated={currentStep > index}\n                                label={step}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"relative w-full h-2 bg-gray-300\">\n                    <div\n                        className=\"absolute w-full h-2 bg-indigo-500\"\n                        style={{ width: progressPourcentage }}\n                    />\n                </div>\n            </div>\n            <div className=\"block md:hidden\">\n                <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"relative flex items-center justify-center\">\n                        <div\n                            role=\"progressbar\"\n                            style={{ height: 56, transform: 'rotate(-90deg)', width: 56 }}>\n                            <svg\n                                className=\"block\"\n                                viewBox={`${size / 2} ${size / 2} ${size} ${size}`}>\n                                <circle\n                                    className=\"text-indigo-500 stroke-current\"\n                                    cx={size}\n                                    cy={size}\n                                    fill=\"white\"\n                                    r={(size - thickness) / 2}\n                                    strokeWidth={thickness}\n                                    style={circleStyle}\n                                />\n                            </svg>\n                        </div>\n                        <div className=\"absolute inset-0 flex items-center justify-center font-bold\">{`${\n                            currentStep + 1\n                        } / ${steps.length}`}</div>\n                    </div>\n                    <div className=\"text-right\">\n                        <div className=\"text-gray-900 text-xl font-bold leading-5 sm:text-2xl sm:leading-6\">\n                            {steps[currentStep]}\n                        </div>\n                        {steps[currentStep + 1] && (\n                            <div className=\"sm:text-md mt-2 text-gray-900 leading-5 sm:leading-6\">\n                                {t('common:next')}: {steps[currentStep + 1]}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}