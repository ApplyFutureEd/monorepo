{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paul/projects/applyfuture/students/packages/students/src/components/core/button/Button.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Loader from '@components/core/loader/Loader';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cx from 'classnames';\nimport { forwardRef } from 'react';\nconst Button = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    children,\n    disabled = false,\n    endIcon,\n    isLoading = false,\n    onClick,\n    startIcon,\n    type = 'button',\n    variant = 'primary'\n  } = props,\n        rest = _objectWithoutProperties(props, [\"children\", \"disabled\", \"endIcon\", \"isLoading\", \"onClick\", \"startIcon\", \"type\", \"variant\"]);\n\n  const baseClasses = 'min-h-button inline-flex items-center px-4 py-2 font-sans text-base font-medium leading-6 border rounded-md transition duration-150 ease-in-out';\n  const primaryClasses = 'text-white hover:bg-indigo-500 bg-indigo-600 active:bg-indigo-700 focus:border-indigo-700 border-transparent focus:outline-none focus:shadow-outline-indigo';\n  const secondaryClasses = 'hover:text-gray-500 text-gray-700 active:text-gray-800 active:bg-gray-50 bg-white border-gray-300 focus:outline-none';\n  const successClasses = 'text-white bg-green-400 focus:border-green-700 border-transparent focus:outline-none focus:shadow-outline-green cursor-default';\n  const dangerClasses = 'text-white hover:bg-red-500 bg-red-600 focus:border-red-700 border-transparent focus:outline-none focus:shadow-outline-red';\n  const disabledClasses = 'text-gray-500 bg-indigo-100 border-transparent cursor-not-allowed';\n  const classes = cx({\n    [`${baseClasses}`]: true,\n    [`${primaryClasses}`]: !disabled && variant === 'primary',\n    [`${secondaryClasses}`]: !disabled && variant === 'secondary',\n    [`${successClasses}`]: !disabled && variant === 'success',\n    [`${dangerClasses}`]: !disabled && variant === 'danger',\n    [`${disabledClasses}`]: disabled\n  });\n  return /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({\n    className: \"inline-flex rounded-md shadow-sm\"\n  }, rest), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: ref,\n      className: classes,\n      disabled: disabled,\n      type: type,\n      onClick: onClick,\n      children: [startIcon && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        fixedWidth: true,\n        className: cx({\n          'mr-2': children\n        }),\n        icon: startIcon,\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex-shrink-0 ml-2\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), endIcon && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        fixedWidth: true,\n        className: cx({\n          'ml-2': children\n        }),\n        icon: endIcon,\n        size: \"sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n});\nexport default Button;","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/packages/students/src/components/core/button/Button.tsx"],"names":["Loader","FontAwesomeIcon","cx","forwardRef","Button","props","ref","children","disabled","endIcon","isLoading","onClick","startIcon","type","variant","rest","baseClasses","primaryClasses","secondaryClasses","successClasses","dangerClasses","disabledClasses","classes"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,gCAAnB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,UAAT,QAAsC,OAAtC;AAuCA,MAAMC,MAAM,gBAAGD,UAAU,CAAa,CAACE,KAAD,EAAQC,GAAR,KAAgB;AAClD,QAAM;AACFC,IAAAA,QADE;AAEFC,IAAAA,QAAQ,GAAG,KAFT;AAGFC,IAAAA,OAHE;AAIFC,IAAAA,SAAS,GAAG,KAJV;AAKFC,IAAAA,OALE;AAMFC,IAAAA,SANE;AAOFC,IAAAA,IAAI,GAAG,QAPL;AAQFC,IAAAA,OAAO,GAAG;AARR,MAUFT,KAVJ;AAAA,QASOU,IATP,4BAUIV,KAVJ;;AAYA,QAAMW,WAAW,GACb,iJADJ;AAEA,QAAMC,cAAc,GAChB,6JADJ;AAEA,QAAMC,gBAAgB,GAClB,sHADJ;AAEA,QAAMC,cAAc,GAChB,gIADJ;AAEA,QAAMC,aAAa,GACf,4HADJ;AAEA,QAAMC,eAAe,GAAG,mEAAxB;AAEA,QAAMC,OAAO,GAAGpB,EAAE,CAAC;AACf,KAAE,GAAEc,WAAY,EAAhB,GAAoB,IADL;AAEf,KAAE,GAAEC,cAAe,EAAnB,GAAuB,CAACT,QAAD,IAAaM,OAAO,KAAK,SAFjC;AAGf,KAAE,GAAEI,gBAAiB,EAArB,GAAyB,CAACV,QAAD,IAAaM,OAAO,KAAK,WAHnC;AAIf,KAAE,GAAEK,cAAe,EAAnB,GAAuB,CAACX,QAAD,IAAaM,OAAO,KAAK,SAJjC;AAKf,KAAE,GAAEM,aAAc,EAAlB,GAAsB,CAACZ,QAAD,IAAaM,OAAO,KAAK,QALhC;AAMf,KAAE,GAAEO,eAAgB,EAApB,GAAwBb;AANT,GAAD,CAAlB;AASA,sBACI;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAuDO,IAAvD;AAAA,2BACI;AAAQ,MAAA,GAAG,EAAET,GAAb;AAAkB,MAAA,SAAS,EAAEgB,OAA7B;AAAsC,MAAA,QAAQ,EAAEd,QAAhD;AAA0D,MAAA,IAAI,EAAEK,IAAhE;AAAsE,MAAA,OAAO,EAAEF,OAA/E;AAAA,iBACKC,SAAS,iBACN,QAAC,eAAD;AACI,QAAA,UAAU,MADd;AAEI,QAAA,SAAS,EAAEV,EAAE,CAAC;AAAE,kBAAQK;AAAV,SAAD,CAFjB;AAGI,QAAA,IAAI,EAAEK,SAHV;AAII,QAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,cAFR,EASKF,SAAS,gBACN;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,gCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA,oBAAsCH;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,gBAMN;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cAfR,EAiBKE,OAAO,iBACJ,QAAC,eAAD;AACI,QAAA,UAAU,MADd;AAEI,QAAA,SAAS,EAAEP,EAAE,CAAC;AAAE,kBAAQK;AAAV,SAAD,CAFjB;AAGI,QAAA,IAAI,EAAEE,OAHV;AAII,QAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,cAlBR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAhEwB,CAAzB;AAkEA,eAAeL,MAAf","sourcesContent":["import Loader from '@components/core/loader/Loader';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cx from 'classnames';\nimport { forwardRef, ReactNode } from 'react';\n\ntype Ref = HTMLButtonElement;\n\ntype Props = {\n    /**\n     * The content of the button.\n     */\n    children: ReactNode;\n    /**\n     * If `true`, the button will be disabled.\n     */\n    disabled?: boolean;\n    /**\n     * Element placed after the children. Must be an FontAwesome icon.\n     */\n    endIcon?: IconProp;\n    /**\n     * If `true`, the button will display a loader before the children.\n     */\n    isLoading?: boolean;\n    /**\n     * The function called on the `click` event.\n     */\n    onClick?: () => void;\n    /**\n     * Element placed before the children. Must be an FontAwesome icon.\n     */\n    startIcon?: IconProp;\n    /**\n     * The type to use.\n     */\n    type?: 'button' | 'submit' | 'reset';\n    /**\n     * The variant to use.\n     */\n    variant?: 'primary' | 'secondary' | 'success' | 'danger';\n};\n\nconst Button = forwardRef<Ref, Props>((props, ref) => {\n    const {\n        children,\n        disabled = false,\n        endIcon,\n        isLoading = false,\n        onClick,\n        startIcon,\n        type = 'button',\n        variant = 'primary',\n        ...rest\n    } = props;\n\n    const baseClasses =\n        'min-h-button inline-flex items-center px-4 py-2 font-sans text-base font-medium leading-6 border rounded-md transition duration-150 ease-in-out';\n    const primaryClasses =\n        'text-white hover:bg-indigo-500 bg-indigo-600 active:bg-indigo-700 focus:border-indigo-700 border-transparent focus:outline-none focus:shadow-outline-indigo';\n    const secondaryClasses =\n        'hover:text-gray-500 text-gray-700 active:text-gray-800 active:bg-gray-50 bg-white border-gray-300 focus:outline-none';\n    const successClasses =\n        'text-white bg-green-400 focus:border-green-700 border-transparent focus:outline-none focus:shadow-outline-green cursor-default';\n    const dangerClasses =\n        'text-white hover:bg-red-500 bg-red-600 focus:border-red-700 border-transparent focus:outline-none focus:shadow-outline-red';\n    const disabledClasses = 'text-gray-500 bg-indigo-100 border-transparent cursor-not-allowed';\n\n    const classes = cx({\n        [`${baseClasses}`]: true,\n        [`${primaryClasses}`]: !disabled && variant === 'primary',\n        [`${secondaryClasses}`]: !disabled && variant === 'secondary',\n        [`${successClasses}`]: !disabled && variant === 'success',\n        [`${dangerClasses}`]: !disabled && variant === 'danger',\n        [`${disabledClasses}`]: disabled\n    });\n\n    return (\n        <span className=\"inline-flex rounded-md shadow-sm\" {...rest}>\n            <button ref={ref} className={classes} disabled={disabled} type={type} onClick={onClick}>\n                {startIcon && (\n                    <FontAwesomeIcon\n                        fixedWidth\n                        className={cx({ 'mr-2': children })}\n                        icon={startIcon}\n                        size=\"sm\"\n                    />\n                )}\n                {isLoading ? (\n                    <span className=\"flex items-center\">\n                        <Loader />\n                        <span className=\"flex-shrink-0 ml-2\">{children}</span>\n                    </span>\n                ) : (\n                    <span>{children}</span>\n                )}\n                {endIcon && (\n                    <FontAwesomeIcon\n                        fixedWidth\n                        className={cx({ 'ml-2': children })}\n                        icon={endIcon}\n                        size=\"sm\"\n                    />\n                )}\n            </button>\n        </span>\n    );\n});\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}