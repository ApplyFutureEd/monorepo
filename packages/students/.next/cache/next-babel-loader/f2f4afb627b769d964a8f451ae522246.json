{"ast":null,"code":"export const currency = options => {\n  const {\n    currency,\n    locale = 'en',\n    value\n  } = options;\n  return Intl.NumberFormat(locale, {\n    currency,\n    maximumFractionDigits: 0,\n    minimumFractionDigits: 0,\n    style: 'currency'\n  }).format(value);\n};","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/node_modules/@applyfuture/utils/src/helpers/currency.ts"],"names":["currency","options","locale","value","Intl","NumberFormat","maximumFractionDigits","minimumFractionDigits","style","format"],"mappings":"AAQA,OAAO,MAAMA,QAAQ,GAAIC,OAAD,IAAsC;AAC1D,QAAM;AAAED,IAAAA,QAAF;AAAYE,IAAAA,MAAM,GAAG,IAArB;AAA2BC,IAAAA;AAA3B,MAAqCF,OAA3C;AAEA,SAAOG,IAAI,CAACC,YAAL,CAAkBH,MAAlB,EAA0B;AAC7BF,IAAAA,QAD6B;AAE7BM,IAAAA,qBAAqB,EAAE,CAFM;AAG7BC,IAAAA,qBAAqB,EAAE,CAHM;AAI7BC,IAAAA,KAAK,EAAE;AAJsB,GAA1B,EAKJC,MALI,CAKGN,KALH,CAAP;AAMH,CATM","sourcesContent":["import { SupportedLocale } from 'src/types/SupportedLocale';\n\ntype CurrencyOptions = {\n    currency: string;\n    locale?: SupportedLocale;\n    value: number | bigint;\n};\n\nexport const currency = (options: CurrencyOptions): string => {\n    const { currency, locale = 'en', value } = options;\n\n    return Intl.NumberFormat(locale, {\n        currency,\n        maximumFractionDigits: 0,\n        minimumFractionDigits: 0,\n        style: 'currency'\n    }).format(value);\n};\n"]},"metadata":{},"sourceType":"module"}