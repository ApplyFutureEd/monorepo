{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/paul/projects/applyfuture/students/packages/students/src/pages_/programs.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Container } from '@applyfuture/ui';\nimport { usePageBottom, useQuery } from '@applyfuture/utils';\nimport DashboardLayout from '@components/layouts/dashboard-layout/DashboardLayout';\nimport Filters from '@components/programs/filters/Filters';\nimport Row from '@components/programs/row/Row';\nimport SkeletonRow from '@components/programs/row/SkeletonRow';\nimport Search from '@components/programs/search/Search';\nimport SortBy from '@components/programs/sort-by/SortBy';\nimport { searchPrograms } from '@graphql/queries';\nimport useTranslation from 'next-translate/useTranslation';\nimport React, { useEffect, useState } from 'react';\n\nvar ProgramsPage = function ProgramsPage() {\n  _s();\n\n  var _data$searchPrograms3, _data$searchPrograms4;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState({\n    filter: {\n      published: {\n        eq: true\n      }\n    },\n    limit: 20\n  }),\n      variables = _useState[0],\n      setVariables = _useState[1];\n\n  var _useQuery = useQuery(searchPrograms, variables),\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore,\n      isLoading = _useQuery.isLoading;\n\n  var isPageBottom = usePageBottom();\n  useEffect(function () {\n    var _data$searchPrograms;\n\n    if (!isLoading && isPageBottom && (_data$searchPrograms = data.searchPrograms) !== null && _data$searchPrograms !== void 0 && _data$searchPrograms.nextToken) {\n      var _data$searchPrograms2;\n\n      fetchMore((_data$searchPrograms2 = data.searchPrograms) === null || _data$searchPrograms2 === void 0 ? void 0 : _data$searchPrograms2.nextToken);\n    }\n  }, [isPageBottom]);\n\n  var handleSearch = function handleSearch(query) {\n    if (!query) {\n      return setVariables({\n        filter: {\n          published: {\n            eq: true\n          }\n        },\n        limit: 20\n      });\n    }\n\n    setVariables({\n      filter: {\n        or: [{\n          name: {\n            matchPhrasePrefix: query\n          }\n        }, {\n          city: {\n            matchPhrasePrefix: query\n          }\n        }, {\n          country: {\n            matchPhrasePrefix: query\n          }\n        }, {\n          schoolName: {\n            matchPhrasePrefix: query\n          }\n        }],\n        published: {\n          eq: true\n        }\n      },\n      limit: 20\n    });\n  };\n\n  var handleFilter = function handleFilter(filter) {\n    setVariables(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        filter: filter\n      });\n    });\n  };\n\n  var handleSort = function handleSort(sort) {\n    setVariables(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        sort: sort\n      });\n    });\n  };\n\n  var handleClick = function handleClick() {\n    console.log('Apply - to be implemented');\n  };\n\n  var headerComponents = [/*#__PURE__*/_jsxDEV(Search, {\n    handleSearch: handleSearch\n  }, 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, _this), /*#__PURE__*/_jsxDEV(Filters, {\n    handleFilter: handleFilter\n  }, 1, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, _this), /*#__PURE__*/_jsxDEV(SortBy, {\n    handleSort: handleSort\n  }, 2, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, _this)];\n  var skeletons = Array.from({\n    length: 12\n  }, function (_v, k) {\n    return k + 1;\n  });\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    description: t('programs:meta-description'),\n    title: t('programs:page-title'),\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      headerComponents: headerComponents,\n      innerPadding: false,\n      title: t('programs:programs'),\n      children: [(_data$searchPrograms3 = data.searchPrograms) === null || _data$searchPrograms3 === void 0 ? void 0 : (_data$searchPrograms4 = _data$searchPrograms3.items) === null || _data$searchPrograms4 === void 0 ? void 0 : _data$searchPrograms4.map(function (program) {\n        if (!program || !program.school) {\n          return;\n        }\n\n        var city = program.city,\n            country = program.country,\n            duration = program.duration,\n            durationUnit = program.durationUnit,\n            fee = program.fee,\n            feeCurrency = program.feeCurrency,\n            feeUnit = program.feeUnit,\n            id = program.id,\n            intakes = program.intakes,\n            name = program.name,\n            schedule = program.schedule,\n            school = program.school,\n            slug = program.slug;\n        return /*#__PURE__*/_jsxDEV(Row, {\n          city: city,\n          country: country,\n          duration: duration,\n          durationUnit: durationUnit,\n          fee: fee,\n          feeCurrency: feeCurrency,\n          feeUnit: feeUnit,\n          intakes: intakes,\n          name: name,\n          schedule: schedule,\n          school: {\n            logo: school.logo,\n            name: school.name\n          },\n          slug: slug,\n          onClick: handleClick\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, _this);\n      }), isLoading && skeletons.map(function (_skeleton, index) {\n        return /*#__PURE__*/_jsxDEV(SkeletonRow, {}, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 67\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ProgramsPage, \"+Y2ipy8SAmTGIE7oQrGtWUDSjxI=\", false, function () {\n  return [useTranslation, useQuery, usePageBottom];\n});\n\n_c = ProgramsPage;\nexport default ProgramsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgramsPage\");","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/packages/students/src/pages_/programs.tsx"],"names":["Container","usePageBottom","useQuery","DashboardLayout","Filters","Row","SkeletonRow","Search","SortBy","searchPrograms","useTranslation","React","useEffect","useState","ProgramsPage","t","filter","published","eq","limit","variables","setVariables","data","fetchMore","isLoading","isPageBottom","nextToken","handleSearch","query","or","name","matchPhrasePrefix","city","country","schoolName","handleFilter","prev","handleSort","sort","handleClick","console","log","headerComponents","skeletons","Array","from","length","_v","k","items","map","program","school","duration","durationUnit","fee","feeCurrency","feeUnit","id","intakes","schedule","slug","logo","_skeleton","index"],"mappings":"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","sourcesContent":["import { Container } from '@applyfuture/ui';\nimport { usePageBottom, useQuery } from '@applyfuture/utils';\nimport DashboardLayout from '@components/layouts/dashboard-layout/DashboardLayout';\nimport Filters from '@components/programs/filters/Filters';\nimport Row from '@components/programs/row/Row';\nimport SkeletonRow from '@components/programs/row/SkeletonRow';\nimport Search from '@components/programs/search/Search';\nimport SortBy from '@components/programs/sort-by/SortBy';\nimport {\n    SearchableProgramFilterInput,\n    SearchableProgramSortInput,\n    SearchProgramsQuery,\n    SearchProgramsQueryVariables\n} from '@graphql/API';\nimport { searchPrograms } from '@graphql/queries';\nimport useTranslation from 'next-translate/useTranslation';\nimport React, { FC, useEffect, useState } from 'react';\n\nconst ProgramsPage: FC = () => {\n    const { t } = useTranslation();\n    const [variables, setVariables] = useState<SearchProgramsQueryVariables>({\n        filter: {\n            published: { eq: true }\n        },\n        limit: 20\n    });\n    const { data, fetchMore, isLoading } = useQuery<\n        SearchProgramsQuery,\n        SearchProgramsQueryVariables\n    >(searchPrograms, variables);\n    const isPageBottom = usePageBottom();\n\n    useEffect(() => {\n        if (!isLoading && isPageBottom && data.searchPrograms?.nextToken) {\n            fetchMore(data.searchPrograms?.nextToken);\n        }\n    }, [isPageBottom]);\n\n    const handleSearch = (query: string) => {\n        if (!query) {\n            return setVariables({\n                filter: {\n                    published: { eq: true }\n                },\n                limit: 20\n            });\n        }\n        setVariables({\n            filter: {\n                or: [\n                    { name: { matchPhrasePrefix: query } },\n                    { city: { matchPhrasePrefix: query } },\n                    { country: { matchPhrasePrefix: query } },\n                    { schoolName: { matchPhrasePrefix: query } }\n                ],\n                published: { eq: true }\n            },\n            limit: 20\n        });\n    };\n\n    const handleFilter = (filter: SearchableProgramFilterInput) => {\n        setVariables((prev: SearchProgramsQueryVariables) => ({\n            ...prev,\n            filter\n        }));\n    };\n\n    const handleSort = (sort: SearchableProgramSortInput) => {\n        setVariables((prev: SearchProgramsQueryVariables) => ({\n            ...prev,\n            sort\n        }));\n    };\n\n    const handleClick = () => {\n        console.log('Apply - to be implemented');\n    };\n\n    const headerComponents = [\n        <Search key={0} handleSearch={handleSearch} />,\n        <Filters key={1} handleFilter={handleFilter} />,\n        <SortBy key={2} handleSort={handleSort} />\n    ];\n\n    const skeletons = Array.from({ length: 12 }, (_v, k) => k + 1);\n\n    return (\n        <DashboardLayout\n            description={t('programs:meta-description')}\n            title={t('programs:page-title')}>\n            <Container\n                headerComponents={headerComponents}\n                innerPadding={false}\n                title={t('programs:programs')}>\n                {data.searchPrograms?.items?.map((program) => {\n                    if (!program || !program.school) {\n                        return;\n                    }\n\n                    const {\n                        city,\n                        country,\n                        duration,\n                        durationUnit,\n                        fee,\n                        feeCurrency,\n                        feeUnit,\n                        id,\n                        intakes,\n                        name,\n                        schedule,\n                        school,\n                        slug\n                    } = program;\n\n                    return (\n                        <Row\n                            key={id}\n                            city={city}\n                            country={country}\n                            duration={duration}\n                            durationUnit={durationUnit}\n                            fee={fee}\n                            feeCurrency={feeCurrency}\n                            feeUnit={feeUnit}\n                            intakes={intakes}\n                            name={name}\n                            schedule={schedule}\n                            school={{ logo: school.logo, name: school.name }}\n                            slug={slug}\n                            onClick={handleClick}\n                        />\n                    );\n                })}\n                {isLoading && skeletons.map((_skeleton, index) => <SkeletonRow key={index} />)}\n            </Container>\n        </DashboardLayout>\n    );\n};\n\nexport default ProgramsPage;\n"]},"metadata":{},"sourceType":"module"}