{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/stepper/Stepper.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { faCheckCircle } from '@fortawesome/pro-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cx from 'classnames';\nimport useTranslation from 'next-translate/useTranslation';\n\nvar Step = function Step(props) {\n  var _cx, _cx2;\n\n  var isCurrent = props.isCurrent,\n      isValidated = props.isValidated,\n      label = props.label;\n  var iconBaseClasses = 'text-gray-400 text-lg';\n  var iconValidatedClasses = 'text-green-400';\n  var iconCurrentClasses = 'text-gray-700';\n  var iconClasses = cx((_cx = {}, _defineProperty(_cx, \"\".concat(iconBaseClasses), true), _defineProperty(_cx, \"\".concat(iconCurrentClasses), isCurrent), _defineProperty(_cx, \"\".concat(iconValidatedClasses), isValidated), _cx));\n  var labelBaseClasses = 'text-gray-400 text-sm font-medium';\n  var labelValidatedClasses = 'text-gray-400';\n  var labelCurrentClasses = 'text-gray-700';\n  var labelClasses = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(labelBaseClasses), true), _defineProperty(_cx2, \"\".concat(labelCurrentClasses), isCurrent), _defineProperty(_cx2, \"\".concat(labelValidatedClasses), isValidated), _cx2));\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"flex items-center space-x-2\",\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      className: iconClasses,\n      icon: faCheckCircle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: labelClasses,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Step;\nexport var Stepper = function Stepper(props) {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var currentStep = props.currentStep,\n      steps = props.steps;\n  var progress = currentStep / steps.length * 100;\n  var progressPourcentage = \"\".concat(progress, \"%\");\n  var size = 44;\n  var thickness = 3.6;\n  var circleProgress = (currentStep + 1) / steps.length * 100;\n  var circleStyle = {\n    strokeDasharray: '',\n    strokeDashoffset: ''\n  };\n  var circumference = 2 * Math.PI * ((size - thickness) / 2);\n  circleStyle.strokeDasharray = circumference.toFixed(3);\n  circleStyle.strokeDashoffset = \"\".concat(((100 - circleProgress) / 100 * circumference).toFixed(3), \"px\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hidden md:block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"flex justify-between\",\n          children: steps.map(function (step, index) {\n            return /*#__PURE__*/_jsxDEV(Step, {\n              isCurrent: currentStep === index,\n              isValidated: currentStep > index,\n              label: step\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full h-2 bg-gray-300\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute w-full h-2 bg-indigo-500\",\n          style: {\n            width: progressPourcentage\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block md:hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative flex items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            role: \"progressbar\",\n            style: {\n              height: 56,\n              transform: 'rotate(-90deg)',\n              width: 56\n            },\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"block\",\n              viewBox: \"\".concat(size / 2, \" \").concat(size / 2, \" \").concat(size, \" \").concat(size),\n              children: /*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"text-indigo-500 stroke-current\",\n                cx: size,\n                cy: size,\n                fill: \"white\",\n                r: (size - thickness) / 2,\n                strokeWidth: thickness,\n                style: circleStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute inset-0 flex items-center justify-center font-bold\",\n            children: \"\".concat(currentStep + 1, \" / \").concat(steps.length)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-900 text-xl font-bold leading-5 sm:text-2xl sm:leading-6\",\n            children: steps[currentStep]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, _this), steps[currentStep + 1] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sm:text-md mt-2 text-gray-900 leading-5 sm:leading-6\",\n            children: [t('common:next'), \": \", steps[currentStep + 1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Stepper, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = Stepper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Step\");\n$RefreshReg$(_c2, \"Stepper\");","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/stepper/Stepper.tsx"],"names":["faCheckCircle","FontAwesomeIcon","cx","useTranslation","Step","props","isCurrent","isValidated","label","iconBaseClasses","iconValidatedClasses","iconCurrentClasses","iconClasses","labelBaseClasses","labelValidatedClasses","labelCurrentClasses","labelClasses","Stepper","t","currentStep","steps","progress","length","progressPourcentage","size","thickness","circleProgress","circleStyle","strokeDasharray","strokeDashoffset","circumference","Math","PI","toFixed","map","step","index","width","height","transform"],"mappings":"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","sourcesContent":["import { faCheckCircle } from '@fortawesome/pro-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport cx from 'classnames';\nimport useTranslation from 'next-translate/useTranslation';\nimport { FC } from 'react';\n\ntype StepProps = {\n    isCurrent: boolean;\n    isValidated: boolean;\n    label: string;\n};\n\nconst Step: FC<StepProps> = (props) => {\n    const { isCurrent, isValidated, label } = props;\n\n    const iconBaseClasses = 'text-gray-400 text-lg';\n    const iconValidatedClasses = 'text-green-400';\n    const iconCurrentClasses = 'text-gray-700';\n\n    const iconClasses = cx({\n        [`${iconBaseClasses}`]: true,\n        [`${iconCurrentClasses}`]: isCurrent,\n        [`${iconValidatedClasses}`]: isValidated\n    });\n\n    const labelBaseClasses = 'text-gray-400 text-sm font-medium';\n    const labelValidatedClasses = 'text-gray-400';\n    const labelCurrentClasses = 'text-gray-700';\n\n    const labelClasses = cx({\n        [`${labelBaseClasses}`]: true,\n        [`${labelCurrentClasses}`]: isCurrent,\n        [`${labelValidatedClasses}`]: isValidated\n    });\n\n    return (\n        <li className=\"flex items-center space-x-2\">\n            <FontAwesomeIcon className={iconClasses} icon={faCheckCircle} />\n            <div className={labelClasses}>{label}</div>\n        </li>\n    );\n};\n\ntype Props = {\n    /**\n     * The index of the current step.\n     */\n    currentStep: number;\n    /**\n     * Array of strings representing each steps.\n     */\n    steps: Array<string>;\n};\n\nexport const Stepper: FC<Props> = (props) => {\n    const { t } = useTranslation();\n    const { currentStep, steps } = props;\n    const progress = (currentStep / steps.length) * 100;\n    const progressPourcentage = `${progress}%`;\n\n    const size = 44;\n    const thickness = 3.6;\n    const circleProgress = ((currentStep + 1) / steps.length) * 100;\n    const circleStyle = { strokeDasharray: '', strokeDashoffset: '' };\n    const circumference = 2 * Math.PI * ((size - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    circleStyle.strokeDashoffset = `${(((100 - circleProgress) / 100) * circumference).toFixed(\n        3\n    )}px`;\n\n    return (\n        <>\n            <div className=\"hidden md:block\">\n                <div className=\"mb-2\">\n                    <ul className=\"flex justify-between\">\n                        {steps.map((step, index) => (\n                            <Step\n                                key={index}\n                                isCurrent={currentStep === index}\n                                isValidated={currentStep > index}\n                                label={step}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"relative w-full h-2 bg-gray-300\">\n                    <div\n                        className=\"absolute w-full h-2 bg-indigo-500\"\n                        style={{ width: progressPourcentage }}\n                    />\n                </div>\n            </div>\n            <div className=\"block md:hidden\">\n                <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"relative flex items-center justify-center\">\n                        <div\n                            role=\"progressbar\"\n                            style={{ height: 56, transform: 'rotate(-90deg)', width: 56 }}>\n                            <svg\n                                className=\"block\"\n                                viewBox={`${size / 2} ${size / 2} ${size} ${size}`}>\n                                <circle\n                                    className=\"text-indigo-500 stroke-current\"\n                                    cx={size}\n                                    cy={size}\n                                    fill=\"white\"\n                                    r={(size - thickness) / 2}\n                                    strokeWidth={thickness}\n                                    style={circleStyle}\n                                />\n                            </svg>\n                        </div>\n                        <div className=\"absolute inset-0 flex items-center justify-center font-bold\">{`${\n                            currentStep + 1\n                        } / ${steps.length}`}</div>\n                    </div>\n                    <div className=\"text-right\">\n                        <div className=\"text-gray-900 text-xl font-bold leading-5 sm:text-2xl sm:leading-6\">\n                            {steps[currentStep]}\n                        </div>\n                        {steps[currentStep + 1] && (\n                            <div className=\"sm:text-md mt-2 text-gray-900 leading-5 sm:leading-6\">\n                                {t('common:next')}: {steps[currentStep + 1]}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}