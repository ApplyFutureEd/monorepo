{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/tooltip/Tooltip.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { faInfoCircle } from '@fortawesome/pro-light-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Fragment, useState } from 'react';\nexport var Tooltip = function Tooltip(props) {\n  _s();\n\n  var children = props.children,\n      content = props.content,\n      _props$delay = props.delay,\n      delay = _props$delay === void 0 ? 200 : _props$delay;\n  var timeout;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var showTip = function showTip() {\n    timeout = setTimeout(function () {\n      setActive(true);\n    }, delay);\n  };\n\n  var hideTip = function hideTip() {\n    clearInterval(timeout);\n    setActive(false);\n  };\n\n  if (!content) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative flex items-center\",\n    onMouseEnter: showTip,\n    onMouseLeave: hideTip,\n    children: [children, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ml-2\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"text-indigo-600\",\n        fixedWidth: true,\n        icon: faInfoCircle,\n        size: \"1x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this), active && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-md absolute z-40 p-2 font-sans bg-gray-200 rounded-md\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Tooltip, \"1cfVChV6gA1Fk8+xDnwTj3gmgZo=\");\n\n_c = Tooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tooltip\");","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/tooltip/Tooltip.tsx"],"names":["faInfoCircle","FontAwesomeIcon","Fragment","useState","Tooltip","props","children","content","delay","timeout","active","setActive","showTip","setTimeout","hideTip","clearInterval"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,kCAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAAaC,QAAb,EAAkCC,QAAlC,QAAkD,OAAlD;AAiBA,OAAO,IAAMC,OAAkB,GAAG,SAArBA,OAAqB,CAACC,KAAD,EAAW;AAAA;;AAAA,MACjCC,QADiC,GACED,KADF,CACjCC,QADiC;AAAA,MACvBC,OADuB,GACEF,KADF,CACvBE,OADuB;AAAA,qBACEF,KADF,CACdG,KADc;AAAA,MACdA,KADc,6BACN,GADM;AAGzC,MAAIC,OAAJ;;AAHyC,kBAIbN,QAAQ,CAAC,KAAD,CAJK;AAAA,MAIlCO,MAJkC;AAAA,MAI1BC,SAJ0B;;AAMzC,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBH,IAAAA,OAAO,GAAGI,UAAU,CAAC,YAAM;AACvBF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAFmB,EAEjBH,KAFiB,CAApB;AAGH,GAJD;;AAMA,MAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBC,IAAAA,aAAa,CAACN,OAAD,CAAb;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAHD;;AAKA,MAAI,CAACJ,OAAL,EAAc;AACV,wBAAO,QAAC,QAAD;AAAA,gBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAA4C,IAAA,YAAY,EAAEM,OAA1D;AAAmE,IAAA,YAAY,EAAEE,OAAjF;AAAA,eACKR,QADL,eAEI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,6BACI,QAAC,eAAD;AACI,QAAA,SAAS,EAAC,iBADd;AAEI,QAAA,UAAU,EAAE,IAFhB;AAGI,QAAA,IAAI,EAAEN,YAHV;AAII,QAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFJ,EAUKU,MAAM,iBACH;AAAK,MAAA,SAAS,EAAC,4DAAf;AAAA,gBACKH;AADL;AAAA;AAAA;AAAA;AAAA,aAXR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAkBH,CAvCM;;GAAMH,O;;KAAAA,O","sourcesContent":["import { faInfoCircle } from '@fortawesome/pro-light-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { FC, Fragment, ReactNode, useState } from 'react';\n\ntype Props = {\n    /**\n     * The element that display the tooltip when hovered.\n     */\n    children: ReactNode;\n    /**\n     * The content of the tooltip.\n     */\n    content: ReactNode;\n    /**\n     * The delay before the tooltip is displayed when the `children` element is hovered.\n     */\n    delay?: number;\n};\n\nexport const Tooltip: FC<Props> = (props) => {\n    const { children, content, delay = 200 } = props;\n\n    let timeout: NodeJS.Timeout;\n    const [active, setActive] = useState(false);\n\n    const showTip = () => {\n        timeout = setTimeout(() => {\n            setActive(true);\n        }, delay);\n    };\n\n    const hideTip = () => {\n        clearInterval(timeout);\n        setActive(false);\n    };\n\n    if (!content) {\n        return <Fragment>{children}</Fragment>;\n    }\n\n    return (\n        <div className=\"relative flex items-center\" onMouseEnter={showTip} onMouseLeave={hideTip}>\n            {children}\n            <span className=\"ml-2\">\n                <FontAwesomeIcon\n                    className=\"text-indigo-600\"\n                    fixedWidth={true}\n                    icon={faInfoCircle}\n                    size=\"1x\"\n                />\n            </span>\n            {active && (\n                <div className=\"text-md absolute z-40 p-2 font-sans bg-gray-200 rounded-md\">\n                    {content}\n                </div>\n            )}\n        </div>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}