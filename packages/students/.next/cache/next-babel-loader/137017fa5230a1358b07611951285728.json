{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/select/Select.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Tooltip } from '..';\nimport useTranslation from 'next-translate/useTranslation';\nimport Skeleton from 'react-loading-skeleton';\nimport ReactSelect from 'react-select';\nexport var Select = function Select(props) {\n  _s();\n\n  var disabled = props.disabled,\n      field = props.field,\n      form = props.form,\n      _props$isLoading = props.isLoading,\n      isLoading = _props$isLoading === void 0 ? false : _props$isLoading,\n      _props$isMulti = props.isMulti,\n      isMulti = _props$isMulti === void 0 ? false : _props$isMulti,\n      label = props.label,\n      meta = props.meta,\n      options = props.options,\n      optional = props.optional,\n      _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,\n      _props$tooltip = props.tooltip,\n      tooltip = _props$tooltip === void 0 ? '' : _props$tooltip,\n      rest = _objectWithoutProperties(props, [\"disabled\", \"field\", \"form\", \"isLoading\", \"isMulti\", \"label\", \"meta\", \"options\", \"optional\", \"placeholder\", \"tooltip\"]);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var onError = Boolean((meta === null || meta === void 0 ? void 0 : meta.touched) && (meta === null || meta === void 0 ? void 0 : meta.error));\n  var customStyles = {\n    clearIndicator: function clearIndicator(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        padding: 0\n      });\n    },\n    control: function control(provided, state) {\n      var appearance = 'none';\n      var backgroundColor = state.selectProps.isDisabled ? 'rgba(243, 244, 246)' : '#ffffff';\n      var borderColor = state.selectProps.onError ? 'rgba(252, 165, 165)' : '#d2d6dc';\n      var borderRadius = '0.375rem';\n      var borderWidth = '1px';\n      var boxShadow = state.selectProps.onError ? '0 0 0 3px rgba(248, 180, 180, 0.45)' : provided.boxShadow;\n      var fontSize = '0.875rem';\n      var minHeight = 'auto';\n      var outline = 'none';\n      var padding = '0.5rem 0.75rem';\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        '&:focus': {\n          borderColor: borderColor,\n          boxShadow: boxShadow,\n          outline: outline\n        },\n        '&:hover': {\n          borderColor: borderColor,\n          boxShadow: boxShadow,\n          outline: outline\n        },\n        appearance: appearance,\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderRadius: borderRadius,\n        borderWidth: borderWidth,\n        fontSize: fontSize,\n        minHeight: minHeight,\n        outline: outline,\n        padding: padding\n      });\n    },\n    dropdownIndicator: function dropdownIndicator(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        padding: 0\n      });\n    },\n    indicatorSeparator: function indicatorSeparator(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        display: 'none'\n      });\n    },\n    multiValue: function multiValue(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        fontSize: '0.875rem'\n      });\n    },\n    multiValueLabel: function multiValueLabel(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        padding: 0\n      });\n    },\n    singleValue: function singleValue(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        fontSize: '0.875rem'\n      });\n    },\n    valueContainer: function valueContainer(provided) {\n      return _objectSpread(_objectSpread({}, provided), {}, {\n        padding: 0\n      });\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: \"15px\",\n          width: \"120px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-md\",\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: \"47px\",\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, _this);\n  }\n\n  var value = options.find(function (option) {\n    return option.value === field.value;\n  });\n\n  var onChange = function onChange(option) {\n    return form.setFieldValue(field.name, option.value);\n  };\n\n  if (isMulti) {\n    var fieldValue = field.value;\n    value = options.filter(function (option) {\n      return fieldValue.includes(option.value);\n    });\n\n    onChange = function onChange(options) {\n      if (!options) {\n        return form.setFieldValue(field.name, []);\n      }\n\n      return form.setFieldValue(field.name, options.map(function (option) {\n        return option.value;\n      }));\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"label\", _objectSpread(_objectSpread({\n    className: \"block font-sans\",\n    htmlFor: field.name\n  }, rest), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      content: tooltip,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-700 text-sm font-medium leading-5\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, _this), optional && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500 text-xs\",\n          children: [\" - \", t('common:optional')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-1 \".concat(disabled ? 'cursor-not-allowed' : 'cursor-auto'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-md shadow-sm\",\n        children: /*#__PURE__*/_jsxDEV(ReactSelect, {\n          inputId: field.name,\n          isDisabled: disabled,\n          isMulti: isMulti,\n          name: field.name,\n          options: options,\n          placeholder: placeholder,\n          styles: customStyles,\n          value: value,\n          onChange: onChange,\n          onError: onError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, _this), onError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-red-600 text-sm\",\n      id: \"\".concat(field.name, \"-error\"),\n      children: meta === null || meta === void 0 ? void 0 : meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Select, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/select/Select.tsx"],"names":["Tooltip","useTranslation","Skeleton","ReactSelect","Select","props","disabled","field","form","isLoading","isMulti","label","meta","options","optional","placeholder","tooltip","rest","t","onError","Boolean","touched","error","customStyles","clearIndicator","provided","padding","control","state","appearance","backgroundColor","selectProps","isDisabled","borderColor","borderRadius","borderWidth","boxShadow","fontSize","minHeight","outline","dropdownIndicator","indicatorSeparator","display","multiValue","multiValueLabel","singleValue","valueContainer","value","find","option","onChange","setFieldValue","name","fieldValue","filter","includes","map"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,OAAR,QAAsB,IAAtB;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAuC,cAAvC;AAqDA,OAAO,IAAMC,MAAiB,GAAG,SAApBA,MAAoB,CAACC,KAAD,EAAW;AAAA;;AAAA,MAEpCC,QAFoC,GAcpCD,KAdoC,CAEpCC,QAFoC;AAAA,MAGpCC,KAHoC,GAcpCF,KAdoC,CAGpCE,KAHoC;AAAA,MAIpCC,IAJoC,GAcpCH,KAdoC,CAIpCG,IAJoC;AAAA,yBAcpCH,KAdoC,CAKpCI,SALoC;AAAA,MAKpCA,SALoC,iCAKxB,KALwB;AAAA,uBAcpCJ,KAdoC,CAMpCK,OANoC;AAAA,MAMpCA,OANoC,+BAM1B,KAN0B;AAAA,MAOpCC,KAPoC,GAcpCN,KAdoC,CAOpCM,KAPoC;AAAA,MAQpCC,IARoC,GAcpCP,KAdoC,CAQpCO,IARoC;AAAA,MASpCC,OAToC,GAcpCR,KAdoC,CASpCQ,OAToC;AAAA,MAUpCC,QAVoC,GAcpCT,KAdoC,CAUpCS,QAVoC;AAAA,2BAcpCT,KAdoC,CAWpCU,WAXoC;AAAA,MAWpCA,WAXoC,mCAWtB,EAXsB;AAAA,uBAcpCV,KAdoC,CAYpCW,OAZoC;AAAA,MAYpCA,OAZoC,+BAY1B,EAZ0B;AAAA,MAajCC,IAbiC,4BAcpCZ,KAdoC;;AAAA,wBAgB1BJ,cAAc,EAhBY;AAAA,MAgBhCiB,CAhBgC,mBAgBhCA,CAhBgC;;AAiBxC,MAAMC,OAAO,GAAGC,OAAO,CAAC,CAAAR,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,OAAN,MAAiBT,IAAjB,aAAiBA,IAAjB,uBAAiBA,IAAI,CAAEU,KAAvB,CAAD,CAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,IAAAA,cAAc,EAAE,wBAACC,QAAD;AAAA,6CAAyBA,QAAzB;AAAmCC,QAAAA,OAAO,EAAE;AAA5C;AAAA,KADC;AAEjBC,IAAAA,OAAO,EAAE,iBAACF,QAAD,EAAgBG,KAAhB,EAA+B;AACpC,UAAMC,UAAU,GAAG,MAAnB;AACA,UAAMC,eAAe,GAAGF,KAAK,CAACG,WAAN,CAAkBC,UAAlB,GAClB,qBADkB,GAElB,SAFN;AAGA,UAAMC,WAAW,GAAGL,KAAK,CAACG,WAAN,CAAkBZ,OAAlB,GAA4B,qBAA5B,GAAoD,SAAxE;AACA,UAAMe,YAAY,GAAG,UAArB;AACA,UAAMC,WAAW,GAAG,KAApB;AACA,UAAMC,SAAS,GAAGR,KAAK,CAACG,WAAN,CAAkBZ,OAAlB,GACZ,qCADY,GAEZM,QAAQ,CAACW,SAFf;AAGA,UAAMC,QAAQ,GAAG,UAAjB;AACA,UAAMC,SAAS,GAAG,MAAlB;AACA,UAAMC,OAAO,GAAG,MAAhB;AACA,UAAMb,OAAO,GAAG,gBAAhB;AAEA,6CACOD,QADP;AAEI,mBAAW;AACPQ,UAAAA,WAAW,EAAXA,WADO;AAEPG,UAAAA,SAAS,EAATA,SAFO;AAGPG,UAAAA,OAAO,EAAPA;AAHO,SAFf;AAOI,mBAAW;AACPN,UAAAA,WAAW,EAAXA,WADO;AAEPG,UAAAA,SAAS,EAATA,SAFO;AAGPG,UAAAA,OAAO,EAAPA;AAHO,SAPf;AAYIV,QAAAA,UAAU,EAAVA,UAZJ;AAaIC,QAAAA,eAAe,EAAfA,eAbJ;AAcIG,QAAAA,WAAW,EAAXA,WAdJ;AAeIC,QAAAA,YAAY,EAAZA,YAfJ;AAgBIC,QAAAA,WAAW,EAAXA,WAhBJ;AAiBIE,QAAAA,QAAQ,EAARA,QAjBJ;AAkBIC,QAAAA,SAAS,EAATA,SAlBJ;AAmBIC,QAAAA,OAAO,EAAPA,OAnBJ;AAoBIb,QAAAA,OAAO,EAAPA;AApBJ;AAsBH,KAxCgB;AAyCjBc,IAAAA,iBAAiB,EAAE,2BAACf,QAAD;AAAA,6CAAyBA,QAAzB;AAAmCC,QAAAA,OAAO,EAAE;AAA5C;AAAA,KAzCF;AA0CjBe,IAAAA,kBAAkB,EAAE,4BAAChB,QAAD;AAAA,6CAAyBA,QAAzB;AAAmCiB,QAAAA,OAAO,EAAE;AAA5C;AAAA,KA1CH;AA2CjBC,IAAAA,UAAU,EAAE,oBAAClB,QAAD;AAAA,6CAAyBA,QAAzB;AAAmCY,QAAAA,QAAQ,EAAE;AAA7C;AAAA,KA3CK;AA4CjBO,IAAAA,eAAe,EAAE,yBAACnB,QAAD;AAAA,6CAAyBA,QAAzB;AAAmCC,QAAAA,OAAO,EAAE;AAA5C;AAAA,KA5CA;AA6CjBmB,IAAAA,WAAW,EAAE,qBAACpB,QAAD;AAAA,6CAAyBA,QAAzB;AAAmCY,QAAAA,QAAQ,EAAE;AAA7C;AAAA,KA7CI;AA8CjBS,IAAAA,cAAc,EAAE,wBAACrB,QAAD;AAAA,6CAAyBA,QAAzB;AAAmCC,QAAAA,OAAO,EAAE;AAA5C;AAAA;AA9CC,GAArB;;AAiDA,MAAIjB,SAAJ,EAAe;AACX,wBACI;AAAA,8BACI;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,MAAM,EAAC,MAAjB;AAAwB,UAAA,KAAK,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAII;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,MAAM,EAAC,MAAjB;AAAwB,UAAA,KAAK,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAUH;;AAED,MAAIsC,KAAqB,GAAGlC,OAAO,CAACmC,IAAR,CAAa,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACF,KAAP,KAAiBxC,KAAK,CAACwC,KAAnC;AAAA,GAAb,CAA5B;;AACA,MAAIG,QAAQ,GAAG,kBAACD,MAAD,EAA4B;AACvC,WAAOzC,IAAI,CAAC2C,aAAL,CAAmB5C,KAAK,CAAC6C,IAAzB,EAA+BH,MAAM,CAACF,KAAtC,CAAP;AACH,GAFD;;AAIA,MAAIrC,OAAJ,EAAa;AACT,QAAM2C,UAAU,GAAG9C,KAAK,CAACwC,KAAzB;AACAA,IAAAA,KAAK,GAAGlC,OAAO,CAACyC,MAAR,CAAe,UAACL,MAAD;AAAA,aAAYI,UAAU,CAACE,QAAX,CAAoBN,MAAM,CAACF,KAA3B,CAAZ;AAAA,KAAf,CAAR;;AACAG,IAAAA,QAAQ,GAAG,kBAACrC,OAAD,EAA6B;AACpC,UAAI,CAACA,OAAL,EAAc;AACV,eAAOL,IAAI,CAAC2C,aAAL,CAAmB5C,KAAK,CAAC6C,IAAzB,EAA+B,EAA/B,CAAP;AACH;;AACD,aAAO5C,IAAI,CAAC2C,aAAL,CACH5C,KAAK,CAAC6C,IADH,EAEHvC,OAAO,CAAC2C,GAAR,CAAY,UAACP,MAAD;AAAA,eAAiBA,MAAM,CAACF,KAAxB;AAAA,OAAZ,CAFG,CAAP;AAIH,KARD;AASH;;AAED,sBACI;AAAO,IAAA,SAAS,EAAC,iBAAjB;AAAmC,IAAA,OAAO,EAAExC,KAAK,CAAC6C;AAAlD,KAA4DnC,IAA5D;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAED,OAAlB;AAAA,6BACI;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,6CAAhB;AAAA,oBAA+DL;AAA/D;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKG,QAAQ,iBACL;AAAM,UAAA,SAAS,EAAC,uBAAhB;AAAA,4BAA4CI,CAAC,CAAC,iBAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,eAUI;AAAK,MAAA,SAAS,iBAAUZ,QAAQ,GAAG,oBAAH,GAA0B,aAA5C,CAAd;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI,QAAC,WAAD;AACI,UAAA,OAAO,EAAEC,KAAK,CAAC6C,IADnB;AAEI,UAAA,UAAU,EAAE9C,QAFhB;AAGI,UAAA,OAAO,EAAEI,OAHb;AAII,UAAA,IAAI,EAAEH,KAAK,CAAC6C,IAJhB;AAKI,UAAA,OAAO,EAAEvC,OALb;AAMI,UAAA,WAAW,EAAEE,WANjB;AAOI,UAAA,MAAM,EAAEQ,YAPZ;AAQI,UAAA,KAAK,EAAEwB,KARX;AASI,UAAA,QAAQ,EAAEG,QATd;AAUI,UAAA,OAAO,EAAE/B;AAVb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAVJ,EA0BKA,OAAO,iBACJ;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAyC,MAAA,EAAE,YAAKZ,KAAK,CAAC6C,IAAX,WAA3C;AAAA,gBACKxC,IADL,aACKA,IADL,uBACKA,IAAI,CAAEU;AADX;AAAA;AAAA;AAAA;AAAA,aA3BR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAkCH,CAtIM;;GAAMlB,M;UAgBKH,c;;;KAhBLG,M","sourcesContent":["import {Tooltip} from '..';\nimport { FieldInputProps, FieldMetaProps, FormikProps } from 'formik';\nimport useTranslation from 'next-translate/useTranslation';\nimport { FC } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport ReactSelect, { ValueType } from 'react-select';\n\ntype Props = {\n    /**\n     * If `true`, the component will be disabled.\n     */\n    disabled?: boolean;\n    /**\n     * An object containing `onChange`, `onBlur`, `name`, and `value` of the field.\n     *\n     * https://formik.org/docs/api/useField#fieldinputpropsvalue\n     */\n    field: FieldInputProps<string | number | Array<string | number>>;\n    /**\n     * State, handlers, and helpers from the parent form.\n     */\n    form: FormikProps<any>;\n    /**\n     * If `true`, the component will display a loading skeleton.\n     */\n    isLoading?: boolean;\n    /**\n     * If `true`, the component will support multiple selected options.\n     */\n    isMulti?: boolean;\n    /**\n     * The label displayed above the select.\n     */\n    label: string;\n    /**\n     * An object that contains relevant computed metadata.\n     *\n     * https://formik.org/docs/api/useField#fieldmetapropsvalue\n     */\n    meta: FieldMetaProps<string | number>;\n    /**\n     * Array of options that populate the select menu\n     */\n    options: Array<{ value: string | number; label: string }>;\n    /**\n     * If `true`, the select will display an `(optional)` mention next to the label.\n     */\n    optional?: boolean;\n    /**\n     * The short hint displayed in the select before the user enters a value.\n     */\n    placeholder?: string;\n    /**\n     * The tooltip displayed when hovering the label.\n     */\n    tooltip?: string;\n};\n\nexport const Select: FC<Props> = (props) => {\n    const {\n        disabled,\n        field,\n        form,\n        isLoading = false,\n        isMulti = false,\n        label,\n        meta,\n        options,\n        optional,\n        placeholder = '',\n        tooltip = '',\n        ...rest\n    } = props;\n\n    const { t } = useTranslation();\n    const onError = Boolean(meta?.touched && meta?.error);\n\n    const customStyles = {\n        clearIndicator: (provided: any) => ({ ...provided, padding: 0 }),\n        control: (provided: any, state: any) => {\n            const appearance = 'none';\n            const backgroundColor = state.selectProps.isDisabled\n                ? 'rgba(243, 244, 246)'\n                : '#ffffff';\n            const borderColor = state.selectProps.onError ? 'rgba(252, 165, 165)' : '#d2d6dc';\n            const borderRadius = '0.375rem';\n            const borderWidth = '1px';\n            const boxShadow = state.selectProps.onError\n                ? '0 0 0 3px rgba(248, 180, 180, 0.45)'\n                : provided.boxShadow;\n            const fontSize = '0.875rem';\n            const minHeight = 'auto';\n            const outline = 'none';\n            const padding = '0.5rem 0.75rem';\n\n            return {\n                ...provided,\n                '&:focus': {\n                    borderColor,\n                    boxShadow,\n                    outline\n                },\n                '&:hover': {\n                    borderColor,\n                    boxShadow,\n                    outline\n                },\n                appearance,\n                backgroundColor,\n                borderColor,\n                borderRadius,\n                borderWidth,\n                fontSize,\n                minHeight,\n                outline,\n                padding\n            };\n        },\n        dropdownIndicator: (provided: any) => ({ ...provided, padding: 0 }),\n        indicatorSeparator: (provided: any) => ({ ...provided, display: 'none' }),\n        multiValue: (provided: any) => ({ ...provided, fontSize: '0.875rem' }),\n        multiValueLabel: (provided: any) => ({ ...provided, padding: 0 }),\n        singleValue: (provided: any) => ({ ...provided, fontSize: '0.875rem' }),\n        valueContainer: (provided: any) => ({ ...provided, padding: 0 })\n    };\n\n    if (isLoading) {\n        return (\n            <div>\n                <div>\n                    <Skeleton height=\"15px\" width=\"120px\" />\n                </div>\n                <div className=\"rounded-md\">\n                    <Skeleton height=\"47px\" width=\"100%\" />\n                </div>\n            </div>\n        );\n    }\n\n    let value: ValueType<any> = options.find((option) => option.value === field.value);\n    let onChange = (option: ValueType<any>) => {\n        return form.setFieldValue(field.name, option.value);\n    };\n\n    if (isMulti) {\n        const fieldValue = field.value as Array<string | number>;\n        value = options.filter((option) => fieldValue.includes(option.value));\n        onChange = (options: ValueType<any>) => {\n            if (!options) {\n                return form.setFieldValue(field.name, []);\n            }\n            return form.setFieldValue(\n                field.name,\n                options.map((option: any) => option.value)\n            );\n        };\n    }\n\n    return (\n        <label className=\"block font-sans\" htmlFor={field.name} {...rest}>\n            <Tooltip content={tooltip}>\n                <div>\n                    <span className=\"text-gray-700 text-sm font-medium leading-5\">{label}</span>\n                    {optional && (\n                        <span className=\"text-gray-500 text-xs\"> - {t('common:optional')}</span>\n                    )}\n                </div>\n            </Tooltip>\n\n            <div className={`mt-1 ${disabled ? 'cursor-not-allowed' : 'cursor-auto'}`}>\n                <div className=\"rounded-md shadow-sm\">\n                    <ReactSelect\n                        inputId={field.name}\n                        isDisabled={disabled}\n                        isMulti={isMulti}\n                        name={field.name}\n                        options={options}\n                        placeholder={placeholder}\n                        styles={customStyles}\n                        value={value}\n                        onChange={onChange}\n                        onError={onError}\n                    />\n                </div>\n            </div>\n            {onError && (\n                <p className=\"mt-2 text-red-600 text-sm\" id={`${field.name}-error`}>\n                    {meta?.error}\n                </p>\n            )}\n        </label>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}