{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/paul/projects/applyfuture/students/packages/students/src/components/programs/sort-by/SortBy.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Dropdown } from '@applyfuture/ui';\nimport { faSort } from '@fortawesome/pro-light-svg-icons';\nimport { SearchableProgramSortableFields, SearchableSortDirection } from '@graphql/API';\nimport useTranslation from 'next-translate/useTranslation';\nimport { useState } from 'react';\n\nvar SortBy = function SortBy(props) {\n  _s();\n\n  var handleSort = props.handleSort;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState('programs:sort-by-option-alphabetical-order'),\n      currentLabel = _useState2[0],\n      setCurrentLabel = _useState2[1];\n\n  var handleToggle = function handleToggle() {\n    return setOpen(function (prev) {\n      return !prev;\n    });\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleClick = function handleClick(option) {\n    setCurrentLabel(option.label);\n    handleSort({\n      direction: option.direction,\n      field: option.field\n    });\n    handleClose();\n  };\n\n  var sortByOptions = [{\n    direction: SearchableSortDirection['asc'],\n    field: SearchableProgramSortableFields['schoolName'],\n    label: 'programs:sort-by-option-alphabetical-order'\n  }, {\n    direction: SearchableSortDirection['asc'],\n    field: SearchableProgramSortableFields['country'],\n    label: 'programs:sort-by-option-country-alphabetical-order'\n  }, {\n    direction: SearchableSortDirection['asc'],\n    field: SearchableProgramSortableFields['duration'],\n    label: 'programs:sort-by-option-low-to-high-duration'\n  }, {\n    direction: SearchableSortDirection['desc'],\n    field: SearchableProgramSortableFields['fee'],\n    label: 'programs:sort-by-option-high-to-low-fee'\n  }, {\n    direction: SearchableSortDirection['asc'],\n    field: SearchableProgramSortableFields['fee'],\n    label: 'programs:sort-by-option-low-to-high-fee'\n  }];\n\n  var trigger = /*#__PURE__*/_jsxDEV(Button, {\n    startIcon: faSort,\n    variant: \"secondary\",\n    onClick: handleToggle,\n    children: t(currentLabel)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, _this);\n\n  var items = sortByOptions.map(function (option) {\n    var label = option.label;\n    return {\n      label: t(label),\n      onClick: function onClick() {\n        return handleClick(option);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    items: items,\n    open: open,\n    trigger: trigger,\n    onOutsideClick: handleClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(SortBy, \"le4ycL7CWyrAkrpVsUpL+U5CXgQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SortBy;\nexport default SortBy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortBy\");","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/packages/students/src/components/programs/sort-by/SortBy.tsx"],"names":["Button","Dropdown","faSort","SearchableProgramSortableFields","SearchableSortDirection","useTranslation","useState","SortBy","props","handleSort","t","open","setOpen","currentLabel","setCurrentLabel","handleToggle","prev","handleClose","handleClick","option","label","direction","field","sortByOptions","trigger","items","map","onClick"],"mappings":"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","sourcesContent":["import { Button, Dropdown, DropdownItem } from '@applyfuture/ui';\nimport { faSort } from '@fortawesome/pro-light-svg-icons';\nimport {\n    SearchableProgramSortableFields,\n    SearchableProgramSortInput,\n    SearchableSortDirection\n} from '@graphql/API';\nimport useTranslation from 'next-translate/useTranslation';\nimport { FC, useState } from 'react';\n\ntype SortByOption = {\n    direction: SearchableSortDirection | null | undefined;\n    field: SearchableProgramSortableFields | null | undefined;\n    label: string;\n};\n\ntype Props = {\n    handleSort: (sort: SearchableProgramSortInput) => void;\n};\n\nconst SortBy: FC<Props> = (props) => {\n    const { handleSort } = props;\n    const { t } = useTranslation();\n    const [open, setOpen] = useState(false);\n    const [currentLabel, setCurrentLabel] = useState('programs:sort-by-option-alphabetical-order');\n\n    const handleToggle = () => setOpen((prev) => !prev);\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleClick = (option: SortByOption) => {\n        setCurrentLabel(option.label);\n        handleSort({ direction: option.direction, field: option.field });\n        handleClose();\n    };\n\n    const sortByOptions: Array<SortByOption> = [\n        {\n            direction: SearchableSortDirection['asc'],\n            field: SearchableProgramSortableFields['schoolName'],\n            label: 'programs:sort-by-option-alphabetical-order'\n        },\n        {\n            direction: SearchableSortDirection['asc'],\n            field: SearchableProgramSortableFields['country'],\n            label: 'programs:sort-by-option-country-alphabetical-order'\n        },\n        {\n            direction: SearchableSortDirection['asc'],\n            field: SearchableProgramSortableFields['duration'],\n            label: 'programs:sort-by-option-low-to-high-duration'\n        },\n        {\n            direction: SearchableSortDirection['desc'],\n            field: SearchableProgramSortableFields['fee'],\n            label: 'programs:sort-by-option-high-to-low-fee'\n        },\n        {\n            direction: SearchableSortDirection['asc'],\n            field: SearchableProgramSortableFields['fee'],\n            label: 'programs:sort-by-option-low-to-high-fee'\n        }\n    ];\n\n    const trigger = (\n        <Button startIcon={faSort} variant=\"secondary\" onClick={handleToggle}>\n            {t(currentLabel)}\n        </Button>\n    );\n\n    const items: Array<DropdownItem> = sortByOptions.map((option) => {\n        const { label } = option;\n\n        return {\n            label: t(label),\n            onClick: () => handleClick(option)\n        };\n    });\n\n    return <Dropdown items={items} open={open} trigger={trigger} onOutsideClick={handleClose} />;\n};\n\nexport default SortBy;\n"]},"metadata":{},"sourceType":"module"}