{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\nexport const getStudent =\n/* GraphQL */\n`\n  query GetStudent($id: ID!) {\n    getStudent(id: $id) {\n      id\n      email\n      phoneNumber\n      address\n      city\n      country\n      firstName\n      middleName\n      lastName\n      birthday\n      firstLanguage\n      passportNumber\n      gender\n      maritalStatus\n      fatherFirstName\n      fatherLastName\n      motherFirstName\n      motherMaidenName\n      guardianLastName\n      guardianFirstName\n      parentsAddress\n      parentsCity\n      parentsCountry\n      parentsPhoneNumber\n      parentsEmail\n      disciplines\n      degrees\n      nationality\n      educationCountry\n      highestEducationLevel\n      gradePointAverage\n      schoolsAttended {\n        name\n        address\n        city\n        country\n        primaryLanguageInstruction\n        educationLevel\n        degreeAwarded\n        degreeAwardedOn\n        attendedInstitutionFrom\n        attendedInstitutionTo\n      }\n      testToefl\n      testIelts\n      testToeic\n      testTcftef\n      testDelfdalf\n      testGre\n      testGmat\n      testTagemage\n      testCambridgeFirst\n      testCambridgeAdvanced\n      testToeflDate\n      testIeltsDate\n      testToeicDate\n      testTcftefDate\n      testDelfdalfDate\n      testGreDate\n      testGmatDate\n      testTagemageDate\n      testCambridgeFirstDate\n      testCambridgeAdvancedDate\n      testEnglishPending\n      testFrenchPending\n      testLogicAndReasoningPending\n      validVisa\n      refusedVisa\n      refusedVisaReason\n      workExperiences {\n        title\n        compagnyName\n        address\n        workedFrom\n        workedTo\n      }\n      documents {\n        items {\n          id\n          studentId\n          name\n          storageKey\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n      }\n      favoritePrograms\n      favoriteSchools\n      applications {\n        items {\n          id\n          studentId\n          programId\n          intake\n          document\n          interviewDate\n          admissionResult\n          tuitionsFeePaymentDate\n          decisionLetterDate\n          visaDate\n          todo\n          modalApplicationCompletedViewed\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n      }\n      hasMandatoryDocuments\n      modalProfileCompletedViewed\n      notifications {\n        title\n        titleOptions\n        description\n        descriptionOptions\n        date\n        seen\n        link\n      }\n      locale\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listStudents =\n/* GraphQL */\n`\n  query ListStudents(\n    $filter: ModelStudentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listStudents(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getDocument =\n/* GraphQL */\n`\n  query GetDocument($id: ID!) {\n    getDocument(id: $id) {\n      id\n      studentId\n      student {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      name\n      storageKey\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listDocuments =\n/* GraphQL */\n`\n  query ListDocuments(\n    $filter: ModelDocumentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listDocuments(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        name\n        storageKey\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getApplication =\n/* GraphQL */\n`\n  query GetApplication($id: ID!) {\n    getApplication(id: $id) {\n      id\n      studentId\n      student {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      programId\n      intake\n      document\n      steps {\n        id\n        status\n        date\n        isMandatory\n      }\n      interviewDate\n      admissionResult\n      tuitionsFeePaymentDate\n      decisionLetterDate\n      visaDate\n      todo\n      notifications {\n        title\n        titleOptions\n        description\n        descriptionOptions\n        date\n        seen\n        link\n      }\n      modalApplicationCompletedViewed\n      createdAt\n      updatedAt\n      program {\n        applicationFee\n        applicationFeeCurrency\n        city\n        costOfLiving\n        costOfLivingCurrency\n        country\n        degree\n        description\n        discipline\n        duration\n        durationUnit\n        fee\n        feeCurrency\n        feesAndFinancing\n        feeUnit\n        gradePointAverage\n        highestEducationLevel\n        id\n        intakes\n        intakeInformation\n        languages\n        minimumAge\n        minimumWorkExperience\n        minimumWorkExperienceUnit\n        name\n        otherRequirements\n        published\n        requestedDocuments {\n          name\n          isMandatory\n          storageKey\n          description\n          condition\n          isSpecific\n        }\n        schedule\n        schoolId\n        schoolName\n        slug\n        submissionDeadline\n        testCambridgeAdvanced\n        testCambridgeFirst\n        testDelfdalf\n        testGmat\n        testGre\n        testIelts\n        testTagemage\n        testTcftef\n        testToefl\n        testToeic\n        createdAt\n        updatedAt\n        school {\n          city\n          country\n          coverPhoto\n          contactEmail\n          contactJobTitle\n          contactName\n          contactPhone\n          creationYear\n          description\n          id\n          institutionType\n          internationalStudents\n          logo\n          name\n          totalStudents\n          slug\n          published\n          contractStatus\n          createdAt\n          updatedAt\n        }\n      }\n      owner\n    }\n  }\n`;\nexport const listApplications =\n/* GraphQL */\n`\n  query ListApplications(\n    $filter: ModelApplicationFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listApplications(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        programId\n        intake\n        document\n        steps {\n          id\n          status\n          date\n          isMandatory\n        }\n        interviewDate\n        admissionResult\n        tuitionsFeePaymentDate\n        decisionLetterDate\n        visaDate\n        todo\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        modalApplicationCompletedViewed\n        createdAt\n        updatedAt\n        program {\n          applicationFee\n          applicationFeeCurrency\n          city\n          costOfLiving\n          costOfLivingCurrency\n          country\n          degree\n          description\n          discipline\n          duration\n          durationUnit\n          fee\n          feeCurrency\n          feesAndFinancing\n          feeUnit\n          gradePointAverage\n          highestEducationLevel\n          id\n          intakes\n          intakeInformation\n          languages\n          minimumAge\n          minimumWorkExperience\n          minimumWorkExperienceUnit\n          name\n          otherRequirements\n          published\n          schedule\n          schoolId\n          schoolName\n          slug\n          submissionDeadline\n          testCambridgeAdvanced\n          testCambridgeFirst\n          testDelfdalf\n          testGmat\n          testGre\n          testIelts\n          testTagemage\n          testTcftef\n          testToefl\n          testToeic\n          createdAt\n          updatedAt\n        }\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getSearchAlert =\n/* GraphQL */\n`\n  query GetSearchAlert($id: ID!) {\n    getSearchAlert(id: $id) {\n      id\n      query\n      type\n      studentId\n      student {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listSearchAlerts =\n/* GraphQL */\n`\n  query ListSearchAlerts(\n    $filter: ModelSearchAlertFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSearchAlerts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        query\n        type\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getFeedback =\n/* GraphQL */\n`\n  query GetFeedback($id: ID!) {\n    getFeedback(id: $id) {\n      id\n      rating\n      applicationId\n      application {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        programId\n        intake\n        document\n        steps {\n          id\n          status\n          date\n          isMandatory\n        }\n        interviewDate\n        admissionResult\n        tuitionsFeePaymentDate\n        decisionLetterDate\n        visaDate\n        todo\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        modalApplicationCompletedViewed\n        createdAt\n        updatedAt\n        program {\n          applicationFee\n          applicationFeeCurrency\n          city\n          costOfLiving\n          costOfLivingCurrency\n          country\n          degree\n          description\n          discipline\n          duration\n          durationUnit\n          fee\n          feeCurrency\n          feesAndFinancing\n          feeUnit\n          gradePointAverage\n          highestEducationLevel\n          id\n          intakes\n          intakeInformation\n          languages\n          minimumAge\n          minimumWorkExperience\n          minimumWorkExperienceUnit\n          name\n          otherRequirements\n          published\n          schedule\n          schoolId\n          schoolName\n          slug\n          submissionDeadline\n          testCambridgeAdvanced\n          testCambridgeFirst\n          testDelfdalf\n          testGmat\n          testGre\n          testIelts\n          testTagemage\n          testTcftef\n          testToefl\n          testToeic\n          createdAt\n          updatedAt\n        }\n        owner\n      }\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listFeedbacks =\n/* GraphQL */\n`\n  query ListFeedbacks(\n    $filter: ModelFeedbackFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listFeedbacks(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        rating\n        applicationId\n        application {\n          id\n          studentId\n          programId\n          intake\n          document\n          interviewDate\n          admissionResult\n          tuitionsFeePaymentDate\n          decisionLetterDate\n          visaDate\n          todo\n          modalApplicationCompletedViewed\n          createdAt\n          updatedAt\n          owner\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getStudentByEmail =\n/* GraphQL */\n`\n  query GetStudentByEmail(\n    $email: String\n    $sortDirection: ModelSortDirection\n    $filter: ModelStudentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getStudentByEmail(\n      email: $email\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getDocumentByStudent =\n/* GraphQL */\n`\n  query GetDocumentByStudent(\n    $studentId: ID\n    $sortDirection: ModelSortDirection\n    $filter: ModelDocumentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getDocumentByStudent(\n      studentId: $studentId\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        name\n        storageKey\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getByStorageKey =\n/* GraphQL */\n`\n  query GetByStorageKey(\n    $storageKey: String\n    $sortDirection: ModelSortDirection\n    $filter: ModelDocumentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getByStorageKey(\n      storageKey: $storageKey\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        name\n        storageKey\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getApplicationByStudent =\n/* GraphQL */\n`\n  query GetApplicationByStudent(\n    $studentId: ID\n    $sortDirection: ModelSortDirection\n    $filter: ModelApplicationFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getApplicationByStudent(\n      studentId: $studentId\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        programId\n        intake\n        document\n        steps {\n          id\n          status\n          date\n          isMandatory\n        }\n        interviewDate\n        admissionResult\n        tuitionsFeePaymentDate\n        decisionLetterDate\n        visaDate\n        todo\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        modalApplicationCompletedViewed\n        createdAt\n        updatedAt\n        program {\n          applicationFee\n          applicationFeeCurrency\n          city\n          costOfLiving\n          costOfLivingCurrency\n          country\n          degree\n          description\n          discipline\n          duration\n          durationUnit\n          fee\n          feeCurrency\n          feesAndFinancing\n          feeUnit\n          gradePointAverage\n          highestEducationLevel\n          id\n          intakes\n          intakeInformation\n          languages\n          minimumAge\n          minimumWorkExperience\n          minimumWorkExperienceUnit\n          name\n          otherRequirements\n          published\n          schedule\n          schoolId\n          schoolName\n          slug\n          submissionDeadline\n          testCambridgeAdvanced\n          testCambridgeFirst\n          testDelfdalf\n          testGmat\n          testGre\n          testIelts\n          testTagemage\n          testTcftef\n          testToefl\n          testToeic\n          createdAt\n          updatedAt\n        }\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const listSchools =\n/* GraphQL */\n`\n  query ListSchools(\n    $filter: ModelSchoolFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSchools(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        city\n        country\n        coverPhoto\n        contactEmail\n        contactJobTitle\n        contactName\n        contactPhone\n        creationYear\n        description\n        id\n        institutionType\n        internationalStudents\n        logo\n        name\n        totalStudents\n        slug\n        published\n        stepsTemplates {\n          targets\n        }\n        contractStatus\n        createdAt\n        updatedAt\n        programs {\n          nextToken\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const getSchool =\n/* GraphQL */\n`\n  query GetSchool($id: ID!) {\n    getSchool(id: $id) {\n      city\n      country\n      coverPhoto\n      contactEmail\n      contactJobTitle\n      contactName\n      contactPhone\n      creationYear\n      description\n      id\n      institutionType\n      internationalStudents\n      logo\n      name\n      totalStudents\n      slug\n      published\n      stepsTemplates {\n        targets\n        steps {\n          id\n          status\n          date\n          isMandatory\n        }\n      }\n      contractStatus\n      createdAt\n      updatedAt\n      programs {\n        items {\n          applicationFee\n          applicationFeeCurrency\n          city\n          costOfLiving\n          costOfLivingCurrency\n          country\n          degree\n          description\n          discipline\n          duration\n          durationUnit\n          fee\n          feeCurrency\n          feesAndFinancing\n          feeUnit\n          gradePointAverage\n          highestEducationLevel\n          id\n          intakes\n          intakeInformation\n          languages\n          minimumAge\n          minimumWorkExperience\n          minimumWorkExperienceUnit\n          name\n          otherRequirements\n          published\n          schedule\n          schoolId\n          schoolName\n          slug\n          submissionDeadline\n          testCambridgeAdvanced\n          testCambridgeFirst\n          testDelfdalf\n          testGmat\n          testGre\n          testIelts\n          testTagemage\n          testTcftef\n          testToefl\n          testToeic\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const getSchoolBySlug =\n/* GraphQL */\n`\n  query GetSchoolBySlug(\n    $slug: String\n    $sortDirection: ModelSortDirection\n    $filter: ModelSchoolFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getSchoolBySlug(\n      slug: $slug\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        city\n        country\n        coverPhoto\n        contactEmail\n        contactJobTitle\n        contactName\n        contactPhone\n        creationYear\n        description\n        id\n        institutionType\n        internationalStudents\n        logo\n        name\n        totalStudents\n        slug\n        published\n        stepsTemplates {\n          targets\n        }\n        contractStatus\n        createdAt\n        updatedAt\n        programs {\n          nextToken\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const searchSchools =\n/* GraphQL */\n`\n  query SearchSchools(\n    $filter: SearchableSchoolFilterInput\n    $sort: SearchableSchoolSortInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    searchSchools(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        city\n        country\n        coverPhoto\n        contactEmail\n        contactJobTitle\n        contactName\n        contactPhone\n        creationYear\n        description\n        id\n        institutionType\n        internationalStudents\n        logo\n        name\n        totalStudents\n        slug\n        published\n        stepsTemplates {\n          targets\n        }\n        contractStatus\n        createdAt\n        updatedAt\n        programs {\n          nextToken\n        }\n      }\n      nextToken\n      total\n    }\n  }\n`;\nexport const listPrograms =\n/* GraphQL */\n`\n  query ListPrograms(\n    $filter: ModelProgramFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listPrograms(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        applicationFee\n        applicationFeeCurrency\n        city\n        costOfLiving\n        costOfLivingCurrency\n        country\n        degree\n        description\n        discipline\n        duration\n        durationUnit\n        fee\n        feeCurrency\n        feesAndFinancing\n        feeUnit\n        gradePointAverage\n        highestEducationLevel\n        id\n        intakes\n        intakeInformation\n        languages\n        minimumAge\n        minimumWorkExperience\n        minimumWorkExperienceUnit\n        name\n        otherRequirements\n        published\n        requestedDocuments {\n          name\n          isMandatory\n          storageKey\n          description\n          condition\n          isSpecific\n        }\n        schedule\n        schoolId\n        schoolName\n        slug\n        submissionDeadline\n        testCambridgeAdvanced\n        testCambridgeFirst\n        testDelfdalf\n        testGmat\n        testGre\n        testIelts\n        testTagemage\n        testTcftef\n        testToefl\n        testToeic\n        createdAt\n        updatedAt\n        school {\n          city\n          country\n          coverPhoto\n          contactEmail\n          contactJobTitle\n          contactName\n          contactPhone\n          creationYear\n          description\n          id\n          institutionType\n          internationalStudents\n          logo\n          name\n          totalStudents\n          slug\n          published\n          contractStatus\n          createdAt\n          updatedAt\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const getProgram =\n/* GraphQL */\n`\n  query GetProgram($id: ID!) {\n    getProgram(id: $id) {\n      applicationFee\n      applicationFeeCurrency\n      city\n      costOfLiving\n      costOfLivingCurrency\n      country\n      degree\n      description\n      discipline\n      duration\n      durationUnit\n      fee\n      feeCurrency\n      feesAndFinancing\n      feeUnit\n      gradePointAverage\n      highestEducationLevel\n      id\n      intakes\n      intakeInformation\n      languages\n      minimumAge\n      minimumWorkExperience\n      minimumWorkExperienceUnit\n      name\n      otherRequirements\n      published\n      requestedDocuments {\n        name\n        isMandatory\n        storageKey\n        description\n        condition\n        isSpecific\n      }\n      schedule\n      schoolId\n      schoolName\n      slug\n      submissionDeadline\n      testCambridgeAdvanced\n      testCambridgeFirst\n      testDelfdalf\n      testGmat\n      testGre\n      testIelts\n      testTagemage\n      testTcftef\n      testToefl\n      testToeic\n      createdAt\n      updatedAt\n      school {\n        city\n        country\n        coverPhoto\n        contactEmail\n        contactJobTitle\n        contactName\n        contactPhone\n        creationYear\n        description\n        id\n        institutionType\n        internationalStudents\n        logo\n        name\n        totalStudents\n        slug\n        published\n        stepsTemplates {\n          targets\n        }\n        contractStatus\n        createdAt\n        updatedAt\n        programs {\n          nextToken\n        }\n      }\n    }\n  }\n`;\nexport const getProgramBySlug =\n/* GraphQL */\n`\n  query GetProgramBySlug(\n    $slug: String\n    $sortDirection: ModelSortDirection\n    $filter: ModelProgramFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getProgramBySlug(\n      slug: $slug\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        applicationFee\n        applicationFeeCurrency\n        city\n        costOfLiving\n        costOfLivingCurrency\n        country\n        degree\n        description\n        discipline\n        duration\n        durationUnit\n        fee\n        feeCurrency\n        feesAndFinancing\n        feeUnit\n        gradePointAverage\n        highestEducationLevel\n        id\n        intakes\n        intakeInformation\n        languages\n        minimumAge\n        minimumWorkExperience\n        minimumWorkExperienceUnit\n        name\n        otherRequirements\n        published\n        requestedDocuments {\n          name\n          isMandatory\n          storageKey\n          description\n          condition\n          isSpecific\n        }\n        schedule\n        schoolId\n        schoolName\n        slug\n        submissionDeadline\n        testCambridgeAdvanced\n        testCambridgeFirst\n        testDelfdalf\n        testGmat\n        testGre\n        testIelts\n        testTagemage\n        testTcftef\n        testToefl\n        testToeic\n        createdAt\n        updatedAt\n        school {\n          city\n          country\n          coverPhoto\n          contactEmail\n          contactJobTitle\n          contactName\n          contactPhone\n          creationYear\n          description\n          id\n          institutionType\n          internationalStudents\n          logo\n          name\n          totalStudents\n          slug\n          published\n          contractStatus\n          createdAt\n          updatedAt\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const searchPrograms =\n/* GraphQL */\n`\n  query SearchPrograms(\n    $filter: SearchableProgramFilterInput\n    $sort: SearchableProgramSortInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    searchPrograms(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        applicationFee\n        applicationFeeCurrency\n        city\n        costOfLiving\n        costOfLivingCurrency\n        country\n        degree\n        description\n        discipline\n        duration\n        durationUnit\n        fee\n        feeCurrency\n        feesAndFinancing\n        feeUnit\n        gradePointAverage\n        highestEducationLevel\n        id\n        intakes\n        intakeInformation\n        languages\n        minimumAge\n        minimumWorkExperience\n        minimumWorkExperienceUnit\n        name\n        otherRequirements\n        published\n        requestedDocuments {\n          name\n          isMandatory\n          storageKey\n          description\n          condition\n          isSpecific\n        }\n        schedule\n        schoolId\n        schoolName\n        slug\n        submissionDeadline\n        testCambridgeAdvanced\n        testCambridgeFirst\n        testDelfdalf\n        testGmat\n        testGre\n        testIelts\n        testTagemage\n        testTcftef\n        testToefl\n        testToeic\n        createdAt\n        updatedAt\n        school {\n          city\n          country\n          coverPhoto\n          contactEmail\n          contactJobTitle\n          contactName\n          contactPhone\n          creationYear\n          description\n          id\n          institutionType\n          internationalStudents\n          logo\n          name\n          totalStudents\n          slug\n          published\n          contractStatus\n          createdAt\n          updatedAt\n        }\n      }\n      nextToken\n      total\n    }\n  }\n`;","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/packages/students/src/graphql/queries.ts"],"names":["getStudent","listStudents","getDocument","listDocuments","getApplication","listApplications","getSearchAlert","listSearchAlerts","getFeedback","listFeedbacks","getStudentByEmail","getDocumentByStudent","getByStorageKey","getApplicationByStudent","listSchools","getSchool","getSchoolBySlug","searchSchools","listPrograms","getProgram","getProgramBySlug","searchPrograms"],"mappings":"AAAA;;AACA;AACA;AAEA,OAAO,MAAMA,UAAU;AAAG;AAAe;AACzlIO;AAmIP,OAAO,MAAMC,YAAY;AAAG;AAAegHP,OAAO,MAAMC,WAAW;AAAG;AAAejHO;AAkHP,OAAO,MAAMC,aAAa;AAAG;AAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtFO;AAuFP,OAAO,MAAMC,cAAc;AAAG;AAAepNO;AAqNP,OAAO,MAAMC,gBAAgB;AAAG;AAAecAAc;AAAG;AAAejHO;AAkHP,OAAO,MAAMC,gBAAgB;AAAG;AAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtFO;AAuFP,OAAO,MAAMC,WAAW;AAAG;AAAeaAAa;AAAG;AAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnCO;AAoCP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChvHO;AAwHP,OAAO,MAAMC,oBAAoB;AAAG;AAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9FO;AA+FP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9FO;AA+FP,OAAO,MAAMC,uBAAuB;AAAG;AAAe;AACtnKO;AAoKP,OAAO,MAAMC,WAAW;AAAG;AAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtCO;AAuCP,OAAO,MAAMC,SAAS;AAAG;AAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnFO;AAoFP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9CO;AA+CP,OAAO,MAAMC,aAAa;AAAG;AAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7CO;AA8CP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtFO;AAuFP,OAAO,MAAMC,UAAU;AAAG;AAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArFO;AAsFP,OAAO,MAAMC,gBAAgB;AAAG;AAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9FO;AA+FP,OAAO,MAAMC,cAAc;AAAG;AAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7FO","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getStudent = /* GraphQL */ `\n  query GetStudent($id: ID!) {\n    getStudent(id: $id) {\n      id\n      email\n      phoneNumber\n      address\n      city\n      country\n      firstName\n      middleName\n      lastName\n      birthday\n      firstLanguage\n      passportNumber\n      gender\n      maritalStatus\n      fatherFirstName\n      fatherLastName\n      motherFirstName\n      motherMaidenName\n      guardianLastName\n      guardianFirstName\n      parentsAddress\n      parentsCity\n      parentsCountry\n      parentsPhoneNumber\n      parentsEmail\n      disciplines\n      degrees\n      nationality\n      educationCountry\n      highestEducationLevel\n      gradePointAverage\n      schoolsAttended {\n        name\n        address\n        city\n        country\n        primaryLanguageInstruction\n        educationLevel\n        degreeAwarded\n        degreeAwardedOn\n        attendedInstitutionFrom\n        attendedInstitutionTo\n      }\n      testToefl\n      testIelts\n      testToeic\n      testTcftef\n      testDelfdalf\n      testGre\n      testGmat\n      testTagemage\n      testCambridgeFirst\n      testCambridgeAdvanced\n      testToeflDate\n      testIeltsDate\n      testToeicDate\n      testTcftefDate\n      testDelfdalfDate\n      testGreDate\n      testGmatDate\n      testTagemageDate\n      testCambridgeFirstDate\n      testCambridgeAdvancedDate\n      testEnglishPending\n      testFrenchPending\n      testLogicAndReasoningPending\n      validVisa\n      refusedVisa\n      refusedVisaReason\n      workExperiences {\n        title\n        compagnyName\n        address\n        workedFrom\n        workedTo\n      }\n      documents {\n        items {\n          id\n          studentId\n          name\n          storageKey\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n      }\n      favoritePrograms\n      favoriteSchools\n      applications {\n        items {\n          id\n          studentId\n          programId\n          intake\n          document\n          interviewDate\n          admissionResult\n          tuitionsFeePaymentDate\n          decisionLetterDate\n          visaDate\n          todo\n          modalApplicationCompletedViewed\n          createdAt\n          updatedAt\n          owner\n        }\n        nextToken\n      }\n      hasMandatoryDocuments\n      modalProfileCompletedViewed\n      notifications {\n        title\n        titleOptions\n        description\n        descriptionOptions\n        date\n        seen\n        link\n      }\n      locale\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listStudents = /* GraphQL */ `\n  query ListStudents(\n    $filter: ModelStudentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listStudents(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getDocument = /* GraphQL */ `\n  query GetDocument($id: ID!) {\n    getDocument(id: $id) {\n      id\n      studentId\n      student {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      name\n      storageKey\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listDocuments = /* GraphQL */ `\n  query ListDocuments(\n    $filter: ModelDocumentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listDocuments(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        name\n        storageKey\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getApplication = /* GraphQL */ `\n  query GetApplication($id: ID!) {\n    getApplication(id: $id) {\n      id\n      studentId\n      student {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      programId\n      intake\n      document\n      steps {\n        id\n        status\n        date\n        isMandatory\n      }\n      interviewDate\n      admissionResult\n      tuitionsFeePaymentDate\n      decisionLetterDate\n      visaDate\n      todo\n      notifications {\n        title\n        titleOptions\n        description\n        descriptionOptions\n        date\n        seen\n        link\n      }\n      modalApplicationCompletedViewed\n      createdAt\n      updatedAt\n      program {\n        applicationFee\n        applicationFeeCurrency\n        city\n        costOfLiving\n        costOfLivingCurrency\n        country\n        degree\n        description\n        discipline\n        duration\n        durationUnit\n        fee\n        feeCurrency\n        feesAndFinancing\n        feeUnit\n        gradePointAverage\n        highestEducationLevel\n        id\n        intakes\n        intakeInformation\n        languages\n        minimumAge\n        minimumWorkExperience\n        minimumWorkExperienceUnit\n        name\n        otherRequirements\n        published\n        requestedDocuments {\n          name\n          isMandatory\n          storageKey\n          description\n          condition\n          isSpecific\n        }\n        schedule\n        schoolId\n        schoolName\n        slug\n        submissionDeadline\n        testCambridgeAdvanced\n        testCambridgeFirst\n        testDelfdalf\n        testGmat\n        testGre\n        testIelts\n        testTagemage\n        testTcftef\n        testToefl\n        testToeic\n        createdAt\n        updatedAt\n        school {\n          city\n          country\n          coverPhoto\n          contactEmail\n          contactJobTitle\n          contactName\n          contactPhone\n          creationYear\n          description\n          id\n          institutionType\n          internationalStudents\n          logo\n          name\n          totalStudents\n          slug\n          published\n          contractStatus\n          createdAt\n          updatedAt\n        }\n      }\n      owner\n    }\n  }\n`;\nexport const listApplications = /* GraphQL */ `\n  query ListApplications(\n    $filter: ModelApplicationFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listApplications(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        programId\n        intake\n        document\n        steps {\n          id\n          status\n          date\n          isMandatory\n        }\n        interviewDate\n        admissionResult\n        tuitionsFeePaymentDate\n        decisionLetterDate\n        visaDate\n        todo\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        modalApplicationCompletedViewed\n        createdAt\n        updatedAt\n        program {\n          applicationFee\n          applicationFeeCurrency\n          city\n          costOfLiving\n          costOfLivingCurrency\n          country\n          degree\n          description\n          discipline\n          duration\n          durationUnit\n          fee\n          feeCurrency\n          feesAndFinancing\n          feeUnit\n          gradePointAverage\n          highestEducationLevel\n          id\n          intakes\n          intakeInformation\n          languages\n          minimumAge\n          minimumWorkExperience\n          minimumWorkExperienceUnit\n          name\n          otherRequirements\n          published\n          schedule\n          schoolId\n          schoolName\n          slug\n          submissionDeadline\n          testCambridgeAdvanced\n          testCambridgeFirst\n          testDelfdalf\n          testGmat\n          testGre\n          testIelts\n          testTagemage\n          testTcftef\n          testToefl\n          testToeic\n          createdAt\n          updatedAt\n        }\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getSearchAlert = /* GraphQL */ `\n  query GetSearchAlert($id: ID!) {\n    getSearchAlert(id: $id) {\n      id\n      query\n      type\n      studentId\n      student {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listSearchAlerts = /* GraphQL */ `\n  query ListSearchAlerts(\n    $filter: ModelSearchAlertFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSearchAlerts(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        query\n        type\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getFeedback = /* GraphQL */ `\n  query GetFeedback($id: ID!) {\n    getFeedback(id: $id) {\n      id\n      rating\n      applicationId\n      application {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        programId\n        intake\n        document\n        steps {\n          id\n          status\n          date\n          isMandatory\n        }\n        interviewDate\n        admissionResult\n        tuitionsFeePaymentDate\n        decisionLetterDate\n        visaDate\n        todo\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        modalApplicationCompletedViewed\n        createdAt\n        updatedAt\n        program {\n          applicationFee\n          applicationFeeCurrency\n          city\n          costOfLiving\n          costOfLivingCurrency\n          country\n          degree\n          description\n          discipline\n          duration\n          durationUnit\n          fee\n          feeCurrency\n          feesAndFinancing\n          feeUnit\n          gradePointAverage\n          highestEducationLevel\n          id\n          intakes\n          intakeInformation\n          languages\n          minimumAge\n          minimumWorkExperience\n          minimumWorkExperienceUnit\n          name\n          otherRequirements\n          published\n          schedule\n          schoolId\n          schoolName\n          slug\n          submissionDeadline\n          testCambridgeAdvanced\n          testCambridgeFirst\n          testDelfdalf\n          testGmat\n          testGre\n          testIelts\n          testTagemage\n          testTcftef\n          testToefl\n          testToeic\n          createdAt\n          updatedAt\n        }\n        owner\n      }\n      createdAt\n      updatedAt\n      owner\n    }\n  }\n`;\nexport const listFeedbacks = /* GraphQL */ `\n  query ListFeedbacks(\n    $filter: ModelFeedbackFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listFeedbacks(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        rating\n        applicationId\n        application {\n          id\n          studentId\n          programId\n          intake\n          document\n          interviewDate\n          admissionResult\n          tuitionsFeePaymentDate\n          decisionLetterDate\n          visaDate\n          todo\n          modalApplicationCompletedViewed\n          createdAt\n          updatedAt\n          owner\n        }\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getStudentByEmail = /* GraphQL */ `\n  query GetStudentByEmail(\n    $email: String\n    $sortDirection: ModelSortDirection\n    $filter: ModelStudentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getStudentByEmail(\n      email: $email\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        email\n        phoneNumber\n        address\n        city\n        country\n        firstName\n        middleName\n        lastName\n        birthday\n        firstLanguage\n        passportNumber\n        gender\n        maritalStatus\n        fatherFirstName\n        fatherLastName\n        motherFirstName\n        motherMaidenName\n        guardianLastName\n        guardianFirstName\n        parentsAddress\n        parentsCity\n        parentsCountry\n        parentsPhoneNumber\n        parentsEmail\n        disciplines\n        degrees\n        nationality\n        educationCountry\n        highestEducationLevel\n        gradePointAverage\n        schoolsAttended {\n          name\n          address\n          city\n          country\n          primaryLanguageInstruction\n          educationLevel\n          degreeAwarded\n          degreeAwardedOn\n          attendedInstitutionFrom\n          attendedInstitutionTo\n        }\n        testToefl\n        testIelts\n        testToeic\n        testTcftef\n        testDelfdalf\n        testGre\n        testGmat\n        testTagemage\n        testCambridgeFirst\n        testCambridgeAdvanced\n        testToeflDate\n        testIeltsDate\n        testToeicDate\n        testTcftefDate\n        testDelfdalfDate\n        testGreDate\n        testGmatDate\n        testTagemageDate\n        testCambridgeFirstDate\n        testCambridgeAdvancedDate\n        testEnglishPending\n        testFrenchPending\n        testLogicAndReasoningPending\n        validVisa\n        refusedVisa\n        refusedVisaReason\n        workExperiences {\n          title\n          compagnyName\n          address\n          workedFrom\n          workedTo\n        }\n        documents {\n          nextToken\n        }\n        favoritePrograms\n        favoriteSchools\n        applications {\n          nextToken\n        }\n        hasMandatoryDocuments\n        modalProfileCompletedViewed\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        locale\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getDocumentByStudent = /* GraphQL */ `\n  query GetDocumentByStudent(\n    $studentId: ID\n    $sortDirection: ModelSortDirection\n    $filter: ModelDocumentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getDocumentByStudent(\n      studentId: $studentId\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        name\n        storageKey\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getByStorageKey = /* GraphQL */ `\n  query GetByStorageKey(\n    $storageKey: String\n    $sortDirection: ModelSortDirection\n    $filter: ModelDocumentFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getByStorageKey(\n      storageKey: $storageKey\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        name\n        storageKey\n        createdAt\n        updatedAt\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const getApplicationByStudent = /* GraphQL */ `\n  query GetApplicationByStudent(\n    $studentId: ID\n    $sortDirection: ModelSortDirection\n    $filter: ModelApplicationFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getApplicationByStudent(\n      studentId: $studentId\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        studentId\n        student {\n          id\n          email\n          phoneNumber\n          address\n          city\n          country\n          firstName\n          middleName\n          lastName\n          birthday\n          firstLanguage\n          passportNumber\n          gender\n          maritalStatus\n          fatherFirstName\n          fatherLastName\n          motherFirstName\n          motherMaidenName\n          guardianLastName\n          guardianFirstName\n          parentsAddress\n          parentsCity\n          parentsCountry\n          parentsPhoneNumber\n          parentsEmail\n          disciplines\n          degrees\n          nationality\n          educationCountry\n          highestEducationLevel\n          gradePointAverage\n          testToefl\n          testIelts\n          testToeic\n          testTcftef\n          testDelfdalf\n          testGre\n          testGmat\n          testTagemage\n          testCambridgeFirst\n          testCambridgeAdvanced\n          testToeflDate\n          testIeltsDate\n          testToeicDate\n          testTcftefDate\n          testDelfdalfDate\n          testGreDate\n          testGmatDate\n          testTagemageDate\n          testCambridgeFirstDate\n          testCambridgeAdvancedDate\n          testEnglishPending\n          testFrenchPending\n          testLogicAndReasoningPending\n          validVisa\n          refusedVisa\n          refusedVisaReason\n          favoritePrograms\n          favoriteSchools\n          hasMandatoryDocuments\n          modalProfileCompletedViewed\n          locale\n          createdAt\n          updatedAt\n          owner\n        }\n        programId\n        intake\n        document\n        steps {\n          id\n          status\n          date\n          isMandatory\n        }\n        interviewDate\n        admissionResult\n        tuitionsFeePaymentDate\n        decisionLetterDate\n        visaDate\n        todo\n        notifications {\n          title\n          titleOptions\n          description\n          descriptionOptions\n          date\n          seen\n          link\n        }\n        modalApplicationCompletedViewed\n        createdAt\n        updatedAt\n        program {\n          applicationFee\n          applicationFeeCurrency\n          city\n          costOfLiving\n          costOfLivingCurrency\n          country\n          degree\n          description\n          discipline\n          duration\n          durationUnit\n          fee\n          feeCurrency\n          feesAndFinancing\n          feeUnit\n          gradePointAverage\n          highestEducationLevel\n          id\n          intakes\n          intakeInformation\n          languages\n          minimumAge\n          minimumWorkExperience\n          minimumWorkExperienceUnit\n          name\n          otherRequirements\n          published\n          schedule\n          schoolId\n          schoolName\n          slug\n          submissionDeadline\n          testCambridgeAdvanced\n          testCambridgeFirst\n          testDelfdalf\n          testGmat\n          testGre\n          testIelts\n          testTagemage\n          testTcftef\n          testToefl\n          testToeic\n          createdAt\n          updatedAt\n        }\n        owner\n      }\n      nextToken\n    }\n  }\n`;\nexport const listSchools = /* GraphQL */ `\n  query ListSchools(\n    $filter: ModelSchoolFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listSchools(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        city\n        country\n        coverPhoto\n        contactEmail\n        contactJobTitle\n        contactName\n        contactPhone\n        creationYear\n        description\n        id\n        institutionType\n        internationalStudents\n        logo\n        name\n        totalStudents\n        slug\n        published\n        stepsTemplates {\n          targets\n        }\n        contractStatus\n        createdAt\n        updatedAt\n        programs {\n          nextToken\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const getSchool = /* GraphQL */ `\n  query GetSchool($id: ID!) {\n    getSchool(id: $id) {\n      city\n      country\n      coverPhoto\n      contactEmail\n      contactJobTitle\n      contactName\n      contactPhone\n      creationYear\n      description\n      id\n      institutionType\n      internationalStudents\n      logo\n      name\n      totalStudents\n      slug\n      published\n      stepsTemplates {\n        targets\n        steps {\n          id\n          status\n          date\n          isMandatory\n        }\n      }\n      contractStatus\n      createdAt\n      updatedAt\n      programs {\n        items {\n          applicationFee\n          applicationFeeCurrency\n          city\n          costOfLiving\n          costOfLivingCurrency\n          country\n          degree\n          description\n          discipline\n          duration\n          durationUnit\n          fee\n          feeCurrency\n          feesAndFinancing\n          feeUnit\n          gradePointAverage\n          highestEducationLevel\n          id\n          intakes\n          intakeInformation\n          languages\n          minimumAge\n          minimumWorkExperience\n          minimumWorkExperienceUnit\n          name\n          otherRequirements\n          published\n          schedule\n          schoolId\n          schoolName\n          slug\n          submissionDeadline\n          testCambridgeAdvanced\n          testCambridgeFirst\n          testDelfdalf\n          testGmat\n          testGre\n          testIelts\n          testTagemage\n          testTcftef\n          testToefl\n          testToeic\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n    }\n  }\n`;\nexport const getSchoolBySlug = /* GraphQL */ `\n  query GetSchoolBySlug(\n    $slug: String\n    $sortDirection: ModelSortDirection\n    $filter: ModelSchoolFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getSchoolBySlug(\n      slug: $slug\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        city\n        country\n        coverPhoto\n        contactEmail\n        contactJobTitle\n        contactName\n        contactPhone\n        creationYear\n        description\n        id\n        institutionType\n        internationalStudents\n        logo\n        name\n        totalStudents\n        slug\n        published\n        stepsTemplates {\n          targets\n        }\n        contractStatus\n        createdAt\n        updatedAt\n        programs {\n          nextToken\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const searchSchools = /* GraphQL */ `\n  query SearchSchools(\n    $filter: SearchableSchoolFilterInput\n    $sort: SearchableSchoolSortInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    searchSchools(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        city\n        country\n        coverPhoto\n        contactEmail\n        contactJobTitle\n        contactName\n        contactPhone\n        creationYear\n        description\n        id\n        institutionType\n        internationalStudents\n        logo\n        name\n        totalStudents\n        slug\n        published\n        stepsTemplates {\n          targets\n        }\n        contractStatus\n        createdAt\n        updatedAt\n        programs {\n          nextToken\n        }\n      }\n      nextToken\n      total\n    }\n  }\n`;\nexport const listPrograms = /* GraphQL */ `\n  query ListPrograms(\n    $filter: ModelProgramFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listPrograms(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        applicationFee\n        applicationFeeCurrency\n        city\n        costOfLiving\n        costOfLivingCurrency\n        country\n        degree\n        description\n        discipline\n        duration\n        durationUnit\n        fee\n        feeCurrency\n        feesAndFinancing\n        feeUnit\n        gradePointAverage\n        highestEducationLevel\n        id\n        intakes\n        intakeInformation\n        languages\n        minimumAge\n        minimumWorkExperience\n        minimumWorkExperienceUnit\n        name\n        otherRequirements\n        published\n        requestedDocuments {\n          name\n          isMandatory\n          storageKey\n          description\n          condition\n          isSpecific\n        }\n        schedule\n        schoolId\n        schoolName\n        slug\n        submissionDeadline\n        testCambridgeAdvanced\n        testCambridgeFirst\n        testDelfdalf\n        testGmat\n        testGre\n        testIelts\n        testTagemage\n        testTcftef\n        testToefl\n        testToeic\n        createdAt\n        updatedAt\n        school {\n          city\n          country\n          coverPhoto\n          contactEmail\n          contactJobTitle\n          contactName\n          contactPhone\n          creationYear\n          description\n          id\n          institutionType\n          internationalStudents\n          logo\n          name\n          totalStudents\n          slug\n          published\n          contractStatus\n          createdAt\n          updatedAt\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const getProgram = /* GraphQL */ `\n  query GetProgram($id: ID!) {\n    getProgram(id: $id) {\n      applicationFee\n      applicationFeeCurrency\n      city\n      costOfLiving\n      costOfLivingCurrency\n      country\n      degree\n      description\n      discipline\n      duration\n      durationUnit\n      fee\n      feeCurrency\n      feesAndFinancing\n      feeUnit\n      gradePointAverage\n      highestEducationLevel\n      id\n      intakes\n      intakeInformation\n      languages\n      minimumAge\n      minimumWorkExperience\n      minimumWorkExperienceUnit\n      name\n      otherRequirements\n      published\n      requestedDocuments {\n        name\n        isMandatory\n        storageKey\n        description\n        condition\n        isSpecific\n      }\n      schedule\n      schoolId\n      schoolName\n      slug\n      submissionDeadline\n      testCambridgeAdvanced\n      testCambridgeFirst\n      testDelfdalf\n      testGmat\n      testGre\n      testIelts\n      testTagemage\n      testTcftef\n      testToefl\n      testToeic\n      createdAt\n      updatedAt\n      school {\n        city\n        country\n        coverPhoto\n        contactEmail\n        contactJobTitle\n        contactName\n        contactPhone\n        creationYear\n        description\n        id\n        institutionType\n        internationalStudents\n        logo\n        name\n        totalStudents\n        slug\n        published\n        stepsTemplates {\n          targets\n        }\n        contractStatus\n        createdAt\n        updatedAt\n        programs {\n          nextToken\n        }\n      }\n    }\n  }\n`;\nexport const getProgramBySlug = /* GraphQL */ `\n  query GetProgramBySlug(\n    $slug: String\n    $sortDirection: ModelSortDirection\n    $filter: ModelProgramFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    getProgramBySlug(\n      slug: $slug\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        applicationFee\n        applicationFeeCurrency\n        city\n        costOfLiving\n        costOfLivingCurrency\n        country\n        degree\n        description\n        discipline\n        duration\n        durationUnit\n        fee\n        feeCurrency\n        feesAndFinancing\n        feeUnit\n        gradePointAverage\n        highestEducationLevel\n        id\n        intakes\n        intakeInformation\n        languages\n        minimumAge\n        minimumWorkExperience\n        minimumWorkExperienceUnit\n        name\n        otherRequirements\n        published\n        requestedDocuments {\n          name\n          isMandatory\n          storageKey\n          description\n          condition\n          isSpecific\n        }\n        schedule\n        schoolId\n        schoolName\n        slug\n        submissionDeadline\n        testCambridgeAdvanced\n        testCambridgeFirst\n        testDelfdalf\n        testGmat\n        testGre\n        testIelts\n        testTagemage\n        testTcftef\n        testToefl\n        testToeic\n        createdAt\n        updatedAt\n        school {\n          city\n          country\n          coverPhoto\n          contactEmail\n          contactJobTitle\n          contactName\n          contactPhone\n          creationYear\n          description\n          id\n          institutionType\n          internationalStudents\n          logo\n          name\n          totalStudents\n          slug\n          published\n          contractStatus\n          createdAt\n          updatedAt\n        }\n      }\n      nextToken\n    }\n  }\n`;\nexport const searchPrograms = /* GraphQL */ `\n  query SearchPrograms(\n    $filter: SearchableProgramFilterInput\n    $sort: SearchableProgramSortInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    searchPrograms(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        applicationFee\n        applicationFeeCurrency\n        city\n        costOfLiving\n        costOfLivingCurrency\n        country\n        degree\n        description\n        discipline\n        duration\n        durationUnit\n        fee\n        feeCurrency\n        feesAndFinancing\n        feeUnit\n        gradePointAverage\n        highestEducationLevel\n        id\n        intakes\n        intakeInformation\n        languages\n        minimumAge\n        minimumWorkExperience\n        minimumWorkExperienceUnit\n        name\n        otherRequirements\n        published\n        requestedDocuments {\n          name\n          isMandatory\n          storageKey\n          description\n          condition\n          isSpecific\n        }\n        schedule\n        schoolId\n        schoolName\n        slug\n        submissionDeadline\n        testCambridgeAdvanced\n        testCambridgeFirst\n        testDelfdalf\n        testGmat\n        testGre\n        testIelts\n        testTagemage\n        testTcftef\n        testToefl\n        testToeic\n        createdAt\n        updatedAt\n        school {\n          city\n          country\n          coverPhoto\n          contactEmail\n          contactJobTitle\n          contactName\n          contactPhone\n          creationYear\n          description\n          id\n          institutionType\n          internationalStudents\n          logo\n          name\n          totalStudents\n          slug\n          published\n          contractStatus\n          createdAt\n          updatedAt\n        }\n      }\n      nextToken\n      total\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}