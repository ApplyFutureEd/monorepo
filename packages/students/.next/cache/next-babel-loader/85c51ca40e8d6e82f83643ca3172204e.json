{"ast":null,"code":"import { RewriteFrames } from '@sentry/integrations';\nimport * as Sentry from '@sentry/node';\nexport const initSentry = () => {\n  if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n    const integrations = [];\n\n    if (process.env.NEXT_IS_SERVER === 'true' && process.env.NEXT_PUBLIC_SENTRY_SERVER_ROOT_DIR) {\n      // For Node.js, rewrite Error.stack to use relative paths, so that source\n      // maps starting with ~/_next map to files in Error.stack with path\n      // app:///_next\n      integrations.push(new RewriteFrames({\n        iteratee: frame => {\n          var _frame$filename, _frame$filename2;\n\n          frame.filename = frame === null || frame === void 0 ? void 0 : (_frame$filename = frame.filename) === null || _frame$filename === void 0 ? void 0 : _frame$filename.replace( // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          process.env.NEXT_PUBLIC_SENTRY_SERVER_ROOT_DIR, 'app:///');\n          frame.filename = frame === null || frame === void 0 ? void 0 : (_frame$filename2 = frame.filename) === null || _frame$filename2 === void 0 ? void 0 : _frame$filename2.replace('.next', '_next');\n          return frame;\n        }\n      }));\n    }\n\n    Sentry.init({\n      dsn: process.env.NEXT_PUBLIC_SENTRY_DSN,\n      enabled: false,\n      integrations,\n      release: process.env.NEXT_PUBLIC_COMMIT_SHA\n    });\n  }\n};","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/packages/students/src/utils/services/sentry.ts"],"names":["RewriteFrames","Sentry","initSentry","process","env","NEXT_PUBLIC_SENTRY_DSN","integrations","NEXT_IS_SERVER","NEXT_PUBLIC_SENTRY_SERVER_ROOT_DIR","push","iteratee","frame","filename","replace","init","dsn","enabled","release","NEXT_PUBLIC_COMMIT_SHA"],"mappings":"AAAA,SAASA,aAAT,QAA8B,sBAA9B;AACA,OAAO,KAAKC,MAAZ,MAAwB,cAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAY;AAClC,MAAIC,OAAO,CAACC,GAAR,CAAYC,sBAAhB,EAAwC;AACpC,UAAMC,YAAY,GAAG,EAArB;;AACA,QACIH,OAAO,CAACC,GAAR,CAAYG,cAAZ,KAA+B,MAA/B,IACAJ,OAAO,CAACC,GAAR,CAAYI,kCAFhB,EAGE;AACE;AACA;AACA;AACAF,MAAAA,YAAY,CAACG,IAAb,CACI,IAAIT,aAAJ,CAAkB;AACdU,QAAAA,QAAQ,EAAGC,KAAD,IAAW;AAAA;;AACjBA,UAAAA,KAAK,CAACC,QAAN,GAAiBD,KAAjB,aAAiBA,KAAjB,0CAAiBA,KAAK,CAAEC,QAAxB,oDAAiB,gBAAiBC,OAAjB,EACb;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAYI,kCAFC,EAGb,SAHa,CAAjB;AAKAG,UAAAA,KAAK,CAACC,QAAN,GAAiBD,KAAjB,aAAiBA,KAAjB,2CAAiBA,KAAK,CAAEC,QAAxB,qDAAiB,iBAAiBC,OAAjB,CAAyB,OAAzB,EAAkC,OAAlC,CAAjB;AACA,iBAAOF,KAAP;AACH;AATa,OAAlB,CADJ;AAaH;;AAEDV,IAAAA,MAAM,CAACa,IAAP,CAAY;AACRC,MAAAA,GAAG,EAAEZ,OAAO,CAACC,GAAR,CAAYC,sBADT;AAERW,MAAAA,OAAO,OAFC;AAGRV,MAAAA,YAHQ;AAIRW,MAAAA,OAAO,EAAEd,OAAO,CAACC,GAAR,CAAYc;AAJb,KAAZ;AAMH;AACJ,CAhCM","sourcesContent":["import { RewriteFrames } from '@sentry/integrations';\nimport * as Sentry from '@sentry/node';\n\nexport const initSentry = (): void => {\n    if (process.env.NEXT_PUBLIC_SENTRY_DSN) {\n        const integrations = [];\n        if (\n            process.env.NEXT_IS_SERVER === 'true' &&\n            process.env.NEXT_PUBLIC_SENTRY_SERVER_ROOT_DIR\n        ) {\n            // For Node.js, rewrite Error.stack to use relative paths, so that source\n            // maps starting with ~/_next map to files in Error.stack with path\n            // app:///_next\n            integrations.push(\n                new RewriteFrames({\n                    iteratee: (frame) => {\n                        frame.filename = frame?.filename?.replace(\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            process.env.NEXT_PUBLIC_SENTRY_SERVER_ROOT_DIR!,\n                            'app:///'\n                        );\n                        frame.filename = frame?.filename?.replace('.next', '_next');\n                        return frame;\n                    }\n                })\n            );\n        }\n\n        Sentry.init({\n            dsn: process.env.NEXT_PUBLIC_SENTRY_DSN,\n            enabled: process.env.NODE_ENV === 'production',\n            integrations,\n            release: process.env.NEXT_PUBLIC_COMMIT_SHA\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}