{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paul/projects/applyfuture/students/packages/students/src/components/programs/search/Search.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Input } from '@applyfuture/ui';\nimport { faSearch } from '@fortawesome/pro-light-svg-icons';\nimport { Field, Form, Formik } from 'formik';\nimport useTranslation from 'next-translate/useTranslation';\nimport { object, string } from 'yup';\n\nconst Search = props => {\n  const {\n    handleSearch\n  } = props;\n  const {\n    t\n  } = useTranslation();\n  const validationSchema = object().shape({\n    query: string()\n  });\n  const initialValues = {\n    query: ''\n  };\n\n  const onSubmit = async (values, actions) => {\n    const {\n      query\n    } = values;\n    handleSearch(query);\n    actions.setSubmitting(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: () => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          id: \"query\",\n          name: \"query\",\n          children: fieldProps => /*#__PURE__*/_jsxDEV(Input, _objectSpread({\n            debounce: 2000,\n            placeholder: t('programs:search-placeholder'),\n            startIcon: faSearch\n          }, fieldProps), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/packages/students/src/components/programs/search/Search.tsx"],"names":["Input","faSearch","Field","Form","Formik","useTranslation","object","string","Search","props","handleSearch","t","validationSchema","shape","query","initialValues","onSubmit","values","actions","setSubmitting","fieldProps"],"mappings":";;;;;;;;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,KAAT,EAA4BC,IAA5B,EAAkCC,MAAlC,QAA+D,QAA/D;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,KAA/B;;AAMA,MAAMC,MAAiB,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AAEA,QAAMO,gBAAgB,GAAGN,MAAM,GAAGO,KAAT,CAAe;AACpCC,IAAAA,KAAK,EAAEP,MAAM;AADuB,GAAf,CAAzB;AAQA,QAAMQ,aAAyB,GAAG;AAC9BD,IAAAA,KAAK,EAAE;AADuB,GAAlC;;AAIA,QAAME,QAAQ,GAAG,OAAOC,MAAP,EAA2BC,OAA3B,KAAkE;AAC/E,UAAM;AAAEJ,MAAAA;AAAF,QAAYG,MAAlB;AACAP,IAAAA,YAAY,CAACI,KAAD,CAAZ;AACAI,IAAAA,OAAO,CAACC,aAAR,CAAsB,KAAtB;AACH,GAJD;;AAMA,sBACI,QAAC,MAAD;AACI,IAAA,aAAa,EAAEJ,aADnB;AAEI,IAAA,gBAAgB,EAAEH,gBAFtB;AAGI,IAAA,QAAQ,EAAEI,QAHd;AAAA,cAIK,MAAM;AACH,0BACI,QAAC,IAAD;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,OAAvB;AAAA,oBACMI,UAAD,iBACG,QAAC,KAAD;AACI,YAAA,QAAQ,EAAE,IADd;AAEI,YAAA,WAAW,EAAET,CAAC,CAAC,6BAAD,CAFlB;AAGI,YAAA,SAAS,EAAEV;AAHf,aAIQmB,UAJR;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAcH;AAnBL;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA7CD;;AA+CA,eAAeZ,MAAf","sourcesContent":["import { Input } from '@applyfuture/ui';\nimport { faSearch } from '@fortawesome/pro-light-svg-icons';\nimport { Field, FieldProps, Form, Formik, FormikHelpers } from 'formik';\nimport useTranslation from 'next-translate/useTranslation';\nimport { FC } from 'react';\nimport { object, string } from 'yup';\n\ntype Props = {\n    handleSearch: (query: string) => void;\n};\n\nconst Search: FC<Props> = (props) => {\n    const { handleSearch } = props;\n    const { t } = useTranslation();\n\n    const validationSchema = object().shape({\n        query: string()\n    });\n\n    type FormValues = {\n        query: string;\n    };\n\n    const initialValues: FormValues = {\n        query: ''\n    };\n\n    const onSubmit = async (values: FormValues, actions: FormikHelpers<FormValues>) => {\n        const { query } = values;\n        handleSearch(query);\n        actions.setSubmitting(false);\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}>\n            {() => {\n                return (\n                    <Form>\n                        <Field id=\"query\" name=\"query\">\n                            {(fieldProps: FieldProps) => (\n                                <Input\n                                    debounce={2000}\n                                    placeholder={t('programs:search-placeholder')}\n                                    startIcon={faSearch}\n                                    {...fieldProps}\n                                />\n                            )}\n                        </Field>\n                    </Form>\n                );\n            }}\n        </Formik>\n    );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}