{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/transition/Transition.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createContext, useContext, useEffect, useRef } from 'react';\nimport { CSSTransition as ReactCSSTransition } from 'react-transition-group';\nconst TransitionContext = /*#__PURE__*/createContext({\n  parent: {\n    isInitialRender: true,\n    show: false\n  }\n});\n\nconst useIsInitialRender = () => {\n  const isInitialRender = useRef(true);\n  useEffect(() => {\n    isInitialRender.current = false;\n  }, []);\n  return isInitialRender.current;\n};\n\nconst CSSTransition = props => {\n  const {\n    appear,\n    children,\n    enter = '',\n    enterFrom = '',\n    enterTo = '',\n    leave = '',\n    leaveFrom = '',\n    leaveTo = '',\n    show\n  } = props;\n  const enterClasses = enter.split(' ').filter(s => s.length);\n  const enterFromClasses = enterFrom.split(' ').filter(s => s.length);\n  const enterToClasses = enterTo.split(' ').filter(s => s.length);\n  const leaveClasses = leave.split(' ').filter(s => s.length);\n  const leaveFromClasses = leaveFrom.split(' ').filter(s => s.length);\n  const leaveToClasses = leaveTo.split(' ').filter(s => s.length);\n\n  const addClasses = (node, classes) => {\n    if (classes.length) {\n      node.classList.add(...classes);\n    }\n  };\n\n  const removeClasses = (node, classes) => {\n    if (classes.length) {\n      node.classList.remove(...classes);\n    }\n  };\n\n  const noderef = useRef(null);\n\n  const addEndListener = done => {\n    var _noderef$current;\n\n    (_noderef$current = noderef.current) === null || _noderef$current === void 0 ? void 0 : _noderef$current.addEventListener('transitionend', done, false);\n  };\n\n  const onEnter = () => {\n    if (noderef.current) {\n      addClasses(noderef.current, [...enterClasses, ...enterFromClasses]);\n    }\n  };\n\n  const onEntering = () => {\n    if (noderef.current) {\n      removeClasses(noderef.current, enterFromClasses);\n      addClasses(noderef.current, enterToClasses);\n    }\n  };\n\n  const onEntered = () => {\n    if (noderef.current) {\n      removeClasses(noderef.current, [...enterToClasses, ...enterClasses]);\n    }\n  };\n\n  const onExit = () => {\n    if (noderef.current) {\n      addClasses(noderef.current, [...leaveClasses, ...leaveFromClasses]);\n    }\n  };\n\n  const onExiting = () => {\n    if (noderef.current) {\n      removeClasses(noderef.current, leaveFromClasses);\n      addClasses(noderef.current, leaveToClasses);\n    }\n  };\n\n  const onExited = () => {\n    if (noderef.current) {\n      removeClasses(noderef.current, [...leaveToClasses, ...leaveClasses]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ReactCSSTransition, {\n    unmountOnExit: true,\n    addEndListener: addEndListener,\n    appear: appear,\n    in: show,\n    nodeRef: noderef,\n    onEnter: onEnter,\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: onExited,\n    onExiting: onExiting,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: noderef,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\nexport const Transition = props => {\n  const {\n    appear,\n    show\n  } = props,\n        rest = _objectWithoutProperties(props, [\"appear\", \"show\"]);\n\n  const {\n    parent\n  } = useContext(TransitionContext);\n  const isInitialRender = useIsInitialRender();\n  const isChild = show === undefined;\n\n  if (isChild) {\n    return /*#__PURE__*/_jsxDEV(CSSTransition, _objectSpread({\n      appear: parent ? parent.appear || !parent.isInitialRender : false,\n      show: parent !== null && parent !== void 0 && parent.show ? parent.show : false\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransitionContext.Provider, {\n    value: {\n      parent: {\n        appear,\n        isInitialRender,\n        show: Boolean(show)\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(CSSTransition, _objectSpread({\n      appear: appear,\n      show: show\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["/home/paul/projects/applyfuture/students/node_modules/@applyfuture/ui/src/transition/Transition.tsx"],"names":["createContext","useContext","useEffect","useRef","CSSTransition","ReactCSSTransition","TransitionContext","parent","isInitialRender","show","useIsInitialRender","current","props","appear","children","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","enterClasses","split","filter","s","length","enterFromClasses","enterToClasses","leaveClasses","leaveFromClasses","leaveToClasses","addClasses","node","classes","classList","add","removeClasses","remove","noderef","addEndListener","done","addEventListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","rest","isChild","undefined","Boolean"],"mappings":"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","sourcesContent":["import { createContext, FC, useContext, useEffect, useRef } from 'react';\nimport { CSSTransition as ReactCSSTransition } from 'react-transition-group';\n\ntype TransitionContextProps = {\n    parent: {\n        appear?: boolean;\n        isInitialRender: boolean;\n        show: boolean;\n    };\n};\n\nconst TransitionContext = createContext<Partial<TransitionContextProps>>({\n    parent: {\n        isInitialRender: true,\n        show: false\n    }\n});\n\nconst useIsInitialRender = (): boolean => {\n    const isInitialRender = useRef(true);\n\n    useEffect(() => {\n        isInitialRender.current = false;\n    }, []);\n\n    return isInitialRender.current;\n};\n\ntype CSSTransitionProps = {\n    appear?: boolean;\n    children: React.ReactNode;\n    enter?: string;\n    enterFrom?: string;\n    enterTo?: string;\n    leave?: string;\n    leaveFrom?: string;\n    leaveTo?: string;\n    show?: boolean;\n};\n\nconst CSSTransition: FC<CSSTransitionProps> = (props) => {\n    const {\n        appear,\n        children,\n        enter = '',\n        enterFrom = '',\n        enterTo = '',\n        leave = '',\n        leaveFrom = '',\n        leaveTo = '',\n        show\n    } = props;\n\n    const enterClasses = enter.split(' ').filter((s) => s.length);\n    const enterFromClasses = enterFrom.split(' ').filter((s) => s.length);\n    const enterToClasses = enterTo.split(' ').filter((s) => s.length);\n    const leaveClasses = leave.split(' ').filter((s) => s.length);\n    const leaveFromClasses = leaveFrom.split(' ').filter((s) => s.length);\n    const leaveToClasses = leaveTo.split(' ').filter((s) => s.length);\n\n    const addClasses = (node: HTMLElement, classes: string[]): void => {\n        if (classes.length) {\n            node.classList.add(...classes);\n        }\n    };\n\n    const removeClasses = (node: HTMLElement, classes: string[]): void => {\n        if (classes.length) {\n            node.classList.remove(...classes);\n        }\n    };\n\n    const noderef = useRef<HTMLDivElement>(null);\n\n    const addEndListener = (done: () => void): void => {\n        noderef.current?.addEventListener('transitionend', done, false);\n    };\n\n    const onEnter = (): void => {\n        if (noderef.current) {\n            addClasses(noderef.current, [...enterClasses, ...enterFromClasses]);\n        }\n    };\n\n    const onEntering = (): void => {\n        if (noderef.current) {\n            removeClasses(noderef.current, enterFromClasses);\n            addClasses(noderef.current, enterToClasses);\n        }\n    };\n\n    const onEntered = (): void => {\n        if (noderef.current) {\n            removeClasses(noderef.current, [...enterToClasses, ...enterClasses]);\n        }\n    };\n\n    const onExit = (): void => {\n        if (noderef.current) {\n            addClasses(noderef.current, [...leaveClasses, ...leaveFromClasses]);\n        }\n    };\n\n    const onExiting = (): void => {\n        if (noderef.current) {\n            removeClasses(noderef.current, leaveFromClasses);\n            addClasses(noderef.current, leaveToClasses);\n        }\n    };\n\n    const onExited = (): void => {\n        if (noderef.current) {\n            removeClasses(noderef.current, [...leaveToClasses, ...leaveClasses]);\n        }\n    };\n\n    return (\n        <ReactCSSTransition\n            unmountOnExit\n            addEndListener={addEndListener}\n            appear={appear}\n            in={show}\n            nodeRef={noderef}\n            onEnter={onEnter}\n            onEntered={onEntered}\n            onEntering={onEntering}\n            onExit={onExit}\n            onExited={onExited}\n            onExiting={onExiting}>\n            <div ref={noderef}>{children}</div>\n        </ReactCSSTransition>\n    );\n};\n\nexport const Transition: FC<CSSTransitionProps> = (props) => {\n    const { appear, show, ...rest } = props;\n    const { parent } = useContext(TransitionContext);\n    const isInitialRender = useIsInitialRender();\n    const isChild = show === undefined;\n\n    if (isChild) {\n        return (\n            <CSSTransition\n                appear={parent ? parent.appear || !parent.isInitialRender : false}\n                show={parent?.show ? parent.show : false}\n                {...rest}\n            />\n        );\n    }\n\n    return (\n        <TransitionContext.Provider\n            value={{\n                parent: {\n                    appear,\n                    isInitialRender,\n                    show: Boolean(show)\n                }\n            }}>\n            <CSSTransition appear={appear} show={show} {...rest} />\n        </TransitionContext.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}